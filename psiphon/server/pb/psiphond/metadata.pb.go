// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: ca.psiphon.psiphond/metadata.proto

package psiphond

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetadataClient struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ClientAsn      *string                `protobuf:"bytes,1,opt,name=client_asn,json=clientAsn,proto3,oneof" json:"client_asn,omitempty"`                  //LowCardinality
	ClientAso      *string                `protobuf:"bytes,2,opt,name=client_aso,json=clientAso,proto3,oneof" json:"client_aso,omitempty"`                  //LowCardinality
	ClientBpf      *string                `protobuf:"bytes,3,opt,name=client_bpf,json=clientBpf,proto3,oneof" json:"client_bpf,omitempty"`                  //LowCardinality
	ClientBuildRev *string                `protobuf:"bytes,4,opt,name=client_build_rev,json=clientBuildRev,proto3,oneof" json:"client_build_rev,omitempty"` //LowCardinality
	ClientCity     *string                `protobuf:"bytes,5,opt,name=client_city,json=clientCity,proto3,oneof" json:"client_city,omitempty"`               //LowCardinality
	ClientFeatures []string               `protobuf:"bytes,6,rep,name=client_features,json=clientFeatures,proto3" json:"client_features,omitempty"`         //LowCardinality
	ClientIsp      *string                `protobuf:"bytes,7,opt,name=client_isp,json=clientIsp,proto3,oneof" json:"client_isp,omitempty"`                  //LowCardinality
	ClientPlatform *string                `protobuf:"bytes,8,opt,name=client_platform,json=clientPlatform,proto3,oneof" json:"client_platform,omitempty"`   //LowCardinality
	ClientRegion   *string                `protobuf:"bytes,9,opt,name=client_region,json=clientRegion,proto3,oneof" json:"client_region,omitempty"`         //LowCardinality
	ClientVersion  *int64                 `protobuf:"varint,10,opt,name=client_version,json=clientVersion,proto3,oneof" json:"client_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MetadataClient) Reset() {
	*x = MetadataClient{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataClient) ProtoMessage() {}

func (x *MetadataClient) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataClient.ProtoReflect.Descriptor instead.
func (*MetadataClient) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *MetadataClient) GetClientAsn() string {
	if x != nil && x.ClientAsn != nil {
		return *x.ClientAsn
	}
	return ""
}

func (x *MetadataClient) GetClientAso() string {
	if x != nil && x.ClientAso != nil {
		return *x.ClientAso
	}
	return ""
}

func (x *MetadataClient) GetClientBpf() string {
	if x != nil && x.ClientBpf != nil {
		return *x.ClientBpf
	}
	return ""
}

func (x *MetadataClient) GetClientBuildRev() string {
	if x != nil && x.ClientBuildRev != nil {
		return *x.ClientBuildRev
	}
	return ""
}

func (x *MetadataClient) GetClientCity() string {
	if x != nil && x.ClientCity != nil {
		return *x.ClientCity
	}
	return ""
}

func (x *MetadataClient) GetClientFeatures() []string {
	if x != nil {
		return x.ClientFeatures
	}
	return nil
}

func (x *MetadataClient) GetClientIsp() string {
	if x != nil && x.ClientIsp != nil {
		return *x.ClientIsp
	}
	return ""
}

func (x *MetadataClient) GetClientPlatform() string {
	if x != nil && x.ClientPlatform != nil {
		return *x.ClientPlatform
	}
	return ""
}

func (x *MetadataClient) GetClientRegion() string {
	if x != nil && x.ClientRegion != nil {
		return *x.ClientRegion
	}
	return ""
}

func (x *MetadataClient) GetClientVersion() int64 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

type MetadataDevice struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeviceLocation *string                `protobuf:"bytes,1,opt,name=device_location,json=deviceLocation,proto3,oneof" json:"device_location,omitempty"` //device_location uses geohash encoding
	DeviceRegion   *string                `protobuf:"bytes,2,opt,name=device_region,json=deviceRegion,proto3,oneof" json:"device_region,omitempty"`       //LowCardinality
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MetadataDevice) Reset() {
	*x = MetadataDevice{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataDevice) ProtoMessage() {}

func (x *MetadataDevice) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataDevice.ProtoReflect.Descriptor instead.
func (*MetadataDevice) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *MetadataDevice) GetDeviceLocation() string {
	if x != nil && x.DeviceLocation != nil {
		return *x.DeviceLocation
	}
	return ""
}

func (x *MetadataDevice) GetDeviceRegion() string {
	if x != nil && x.DeviceRegion != nil {
		return *x.DeviceRegion
	}
	return ""
}

type MetadataSession struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SessionId            *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
	SponsorId            *string                `protobuf:"bytes,2,opt,name=sponsor_id,json=sponsorId,proto3,oneof" json:"sponsor_id,omitempty"`                                    //LowCardinality
	PropagationChannelId *string                `protobuf:"bytes,3,opt,name=propagation_channel_id,json=propagationChannelId,proto3,oneof" json:"propagation_channel_id,omitempty"` //LowCardinality
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MetadataSession) Reset() {
	*x = MetadataSession{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSession) ProtoMessage() {}

func (x *MetadataSession) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSession.ProtoReflect.Descriptor instead.
func (*MetadataSession) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{2}
}

func (x *MetadataSession) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *MetadataSession) GetSponsorId() string {
	if x != nil && x.SponsorId != nil {
		return *x.SponsorId
	}
	return ""
}

func (x *MetadataSession) GetPropagationChannelId() string {
	if x != nil && x.PropagationChannelId != nil {
		return *x.PropagationChannelId
	}
	return ""
}

type MetadataServerEntry struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	ServerEntryRegion              *string                `protobuf:"bytes,1,opt,name=server_entry_region,json=serverEntryRegion,proto3,oneof" json:"server_entry_region,omitempty"` //LowCardinality
	ServerEntrySource              *string                `protobuf:"bytes,2,opt,name=server_entry_source,json=serverEntrySource,proto3,oneof" json:"server_entry_source,omitempty"` //LowCardinality
	ServerEntryTag                 *string                `protobuf:"bytes,3,opt,name=server_entry_tag,json=serverEntryTag,proto3,oneof" json:"server_entry_tag,omitempty"`
	ServerEntryTimestamp           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=server_entry_timestamp,json=serverEntryTimestamp,proto3,oneof" json:"server_entry_timestamp,omitempty"`
	ServerPacketManipulation       *bool                  `protobuf:"varint,5,opt,name=server_packet_manipulation,json=serverPacketManipulation,proto3,oneof" json:"server_packet_manipulation,omitempty"`                     //LowCardinality
	ServerReplayFragmentation      *bool                  `protobuf:"varint,6,opt,name=server_replay_fragmentation,json=serverReplayFragmentation,proto3,oneof" json:"server_replay_fragmentation,omitempty"`                  //LowCardinality
	ServerReplayPacketManipulation *bool                  `protobuf:"varint,7,opt,name=server_replay_packet_manipulation,json=serverReplayPacketManipulation,proto3,oneof" json:"server_replay_packet_manipulation,omitempty"` //LowCardinality
	ServerEntryValid               *bool                  `protobuf:"varint,8,opt,name=server_entry_valid,json=serverEntryValid,proto3,oneof" json:"server_entry_valid,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *MetadataServerEntry) Reset() {
	*x = MetadataServerEntry{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataServerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataServerEntry) ProtoMessage() {}

func (x *MetadataServerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataServerEntry.ProtoReflect.Descriptor instead.
func (*MetadataServerEntry) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{3}
}

func (x *MetadataServerEntry) GetServerEntryRegion() string {
	if x != nil && x.ServerEntryRegion != nil {
		return *x.ServerEntryRegion
	}
	return ""
}

func (x *MetadataServerEntry) GetServerEntrySource() string {
	if x != nil && x.ServerEntrySource != nil {
		return *x.ServerEntrySource
	}
	return ""
}

func (x *MetadataServerEntry) GetServerEntryTag() string {
	if x != nil && x.ServerEntryTag != nil {
		return *x.ServerEntryTag
	}
	return ""
}

func (x *MetadataServerEntry) GetServerEntryTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerEntryTimestamp
	}
	return nil
}

func (x *MetadataServerEntry) GetServerPacketManipulation() bool {
	if x != nil && x.ServerPacketManipulation != nil {
		return *x.ServerPacketManipulation
	}
	return false
}

func (x *MetadataServerEntry) GetServerReplayFragmentation() bool {
	if x != nil && x.ServerReplayFragmentation != nil {
		return *x.ServerReplayFragmentation
	}
	return false
}

func (x *MetadataServerEntry) GetServerReplayPacketManipulation() bool {
	if x != nil && x.ServerReplayPacketManipulation != nil {
		return *x.ServerReplayPacketManipulation
	}
	return false
}

func (x *MetadataServerEntry) GetServerEntryValid() bool {
	if x != nil && x.ServerEntryValid != nil {
		return *x.ServerEntryValid
	}
	return false
}

type MetadataInproxy struct {
	state                                            protoimpl.MessageState `protogen:"open.v1"`
	InproxyBrokerClientBpf                           *string                `protobuf:"bytes,1,opt,name=inproxy_broker_client_bpf,json=inproxyBrokerClientBpf,proto3,oneof" json:"inproxy_broker_client_bpf,omitempty"`       //LowCardinality
	InproxyBrokerDialAddress                         *string                `protobuf:"bytes,2,opt,name=inproxy_broker_dial_address,json=inproxyBrokerDialAddress,proto3,oneof" json:"inproxy_broker_dial_address,omitempty"` //LowCardinality
	InproxyBrokerDnsAttempt                          *int64                 `protobuf:"varint,3,opt,name=inproxy_broker_dns_attempt,json=inproxyBrokerDnsAttempt,proto3,oneof" json:"inproxy_broker_dns_attempt,omitempty"`
	InproxyBrokerDnsPreferred                        *string                `protobuf:"bytes,4,opt,name=inproxy_broker_dns_preferred,json=inproxyBrokerDnsPreferred,proto3,oneof" json:"inproxy_broker_dns_preferred,omitempty"`       //LowCardinality
	InproxyBrokerDnsPreresolved                      *string                `protobuf:"bytes,5,opt,name=inproxy_broker_dns_preresolved,json=inproxyBrokerDnsPreresolved,proto3,oneof" json:"inproxy_broker_dns_preresolved,omitempty"` //LowCardinality
	InproxyBrokerDnsQnameMismatches                  *int64                 `protobuf:"varint,6,opt,name=inproxy_broker_dns_qname_mismatches,json=inproxyBrokerDnsQnameMismatches,proto3,oneof" json:"inproxy_broker_dns_qname_mismatches,omitempty"`
	InproxyBrokerDnsQnameMustMatch                   *bool                  `protobuf:"varint,7,opt,name=inproxy_broker_dns_qname_must_match,json=inproxyBrokerDnsQnameMustMatch,proto3,oneof" json:"inproxy_broker_dns_qname_must_match,omitempty"`
	InproxyBrokerDnsQnameRandomCasing                *bool                  `protobuf:"varint,8,opt,name=inproxy_broker_dns_qname_random_casing,json=inproxyBrokerDnsQnameRandomCasing,proto3,oneof" json:"inproxy_broker_dns_qname_random_casing,omitempty"`
	InproxyBrokerDnsTransform                        *string                `protobuf:"bytes,9,opt,name=inproxy_broker_dns_transform,json=inproxyBrokerDnsTransform,proto3,oneof" json:"inproxy_broker_dns_transform,omitempty"` //LowCardinality
	InproxyBrokerDownstreamBytesFragmented           *int64                 `protobuf:"varint,10,opt,name=inproxy_broker_downstream_bytes_fragmented,json=inproxyBrokerDownstreamBytesFragmented,proto3,oneof" json:"inproxy_broker_downstream_bytes_fragmented,omitempty"`
	InproxyBrokerFrontingProviderId                  *string                `protobuf:"bytes,11,opt,name=inproxy_broker_fronting_provider_id,json=inproxyBrokerFrontingProviderId,proto3,oneof" json:"inproxy_broker_fronting_provider_id,omitempty"` //LowCardinality
	InproxyBrokerHostHeader                          *string                `protobuf:"bytes,12,opt,name=inproxy_broker_host_header,json=inproxyBrokerHostHeader,proto3,oneof" json:"inproxy_broker_host_header,omitempty"`                           //LowCardinality
	InproxyBrokerHttpTransform                       *string                `protobuf:"bytes,13,opt,name=inproxy_broker_http_transform,json=inproxyBrokerHttpTransform,proto3,oneof" json:"inproxy_broker_http_transform,omitempty"`                  //LowCardinality
	InproxyBrokerId                                  *string                `protobuf:"bytes,14,opt,name=inproxy_broker_id,json=inproxyBrokerId,proto3,oneof" json:"inproxy_broker_id,omitempty"`                                                     //LowCardinality
	InproxyBrokerIsReplay                            *bool                  `protobuf:"varint,15,opt,name=inproxy_broker_is_replay,json=inproxyBrokerIsReplay,proto3,oneof" json:"inproxy_broker_is_replay,omitempty"`
	InproxyBrokerIsReuse                             *bool                  `protobuf:"varint,16,opt,name=inproxy_broker_is_reuse,json=inproxyBrokerIsReuse,proto3,oneof" json:"inproxy_broker_is_reuse,omitempty"`
	InproxyBrokerResolvedIpAddress                   *string                `protobuf:"bytes,17,opt,name=inproxy_broker_resolved_ip_address,json=inproxyBrokerResolvedIpAddress,proto3,oneof" json:"inproxy_broker_resolved_ip_address,omitempty"` //LowCardinality
	InproxyBrokerSniServerName                       *string                `protobuf:"bytes,18,opt,name=inproxy_broker_sni_server_name,json=inproxyBrokerSniServerName,proto3,oneof" json:"inproxy_broker_sni_server_name,omitempty"`             //LowCardinality
	InproxyBrokerTlsFragmented                       *bool                  `protobuf:"varint,19,opt,name=inproxy_broker_tls_fragmented,json=inproxyBrokerTlsFragmented,proto3,oneof" json:"inproxy_broker_tls_fragmented,omitempty"`
	InproxyBrokerTlsProfile                          *string                `protobuf:"bytes,20,opt,name=inproxy_broker_tls_profile,json=inproxyBrokerTlsProfile,proto3,oneof" json:"inproxy_broker_tls_profile,omitempty"` //LowCardinality
	InproxyBrokerTlsVersion                          *string                `protobuf:"bytes,21,opt,name=inproxy_broker_tls_version,json=inproxyBrokerTlsVersion,proto3,oneof" json:"inproxy_broker_tls_version,omitempty"` //LowCardinality
	InproxyBrokerTransformedHostName                 *bool                  `protobuf:"varint,22,opt,name=inproxy_broker_transformed_host_name,json=inproxyBrokerTransformedHostName,proto3,oneof" json:"inproxy_broker_transformed_host_name,omitempty"`
	InproxyBrokerTransport                           *string                `protobuf:"bytes,23,opt,name=inproxy_broker_transport,json=inproxyBrokerTransport,proto3,oneof" json:"inproxy_broker_transport,omitempty"` //LowCardinality
	InproxyBrokerUpstreamBytesFragmented             *int64                 `protobuf:"varint,24,opt,name=inproxy_broker_upstream_bytes_fragmented,json=inproxyBrokerUpstreamBytesFragmented,proto3,oneof" json:"inproxy_broker_upstream_bytes_fragmented,omitempty"`
	InproxyBrokerUserAgent                           *string                `protobuf:"bytes,25,opt,name=inproxy_broker_user_agent,json=inproxyBrokerUserAgent,proto3,oneof" json:"inproxy_broker_user_agent,omitempty"`                  //LowCardinality
	InproxyClientNatType                             *string                `protobuf:"bytes,26,opt,name=inproxy_client_nat_type,json=inproxyClientNatType,proto3,oneof" json:"inproxy_client_nat_type,omitempty"`                        //LowCardinality
	InproxyClientPortMappingTypes                    []string               `protobuf:"bytes,27,rep,name=inproxy_client_port_mapping_types,json=inproxyClientPortMappingTypes,proto3" json:"inproxy_client_port_mapping_types,omitempty"` //LowCardinality
	InproxyConnectionId                              *string                `protobuf:"bytes,28,opt,name=inproxy_connection_id,json=inproxyConnectionId,proto3,oneof" json:"inproxy_connection_id,omitempty"`
	InproxyDialBrokerOfferDuration                   *int64                 `protobuf:"varint,29,opt,name=inproxy_dial_broker_offer_duration,json=inproxyDialBrokerOfferDuration,proto3,oneof" json:"inproxy_dial_broker_offer_duration,omitempty"`
	InproxyDialFailedAttemptsDuration                *int64                 `protobuf:"varint,30,opt,name=inproxy_dial_failed_attempts_duration,json=inproxyDialFailedAttemptsDuration,proto3,oneof" json:"inproxy_dial_failed_attempts_duration,omitempty"`
	InproxyDialNatDisoveryDuration                   *int64                 `protobuf:"varint,31,opt,name=inproxy_dial_nat_disovery_duration,json=inproxyDialNatDisoveryDuration,proto3,oneof" json:"inproxy_dial_nat_disovery_duration,omitempty"`
	InproxyDialWebrtcConnectionDuration              *int64                 `protobuf:"varint,32,opt,name=inproxy_dial_webrtc_connection_duration,json=inproxyDialWebrtcConnectionDuration,proto3,oneof" json:"inproxy_dial_webrtc_connection_duration,omitempty"`
	InproxyDialWebrtcIceGatheringDuration            *int64                 `protobuf:"varint,33,opt,name=inproxy_dial_webrtc_ice_gathering_duration,json=inproxyDialWebrtcIceGatheringDuration,proto3,oneof" json:"inproxy_dial_webrtc_ice_gathering_duration,omitempty"`
	InproxyMatchedCommonCompartments                 *bool                  `protobuf:"varint,34,opt,name=inproxy_matched_common_compartments,json=inproxyMatchedCommonCompartments,proto3,oneof" json:"inproxy_matched_common_compartments,omitempty"` //LowCardinality
	InproxyMatchedPersonalCompartments               *bool                  `protobuf:"varint,35,opt,name=inproxy_matched_personal_compartments,json=inproxyMatchedPersonalCompartments,proto3,oneof" json:"inproxy_matched_personal_compartments,omitempty"`
	InproxyProxyAppliedTacticsTag                    *string                `protobuf:"bytes,36,opt,name=inproxy_proxy_applied_tactics_tag,json=inproxyProxyAppliedTacticsTag,proto3,oneof" json:"inproxy_proxy_applied_tactics_tag,omitempty"` //LowCardinality
	InproxyProxyAsn                                  *string                `protobuf:"bytes,37,opt,name=inproxy_proxy_asn,json=inproxyProxyAsn,proto3,oneof" json:"inproxy_proxy_asn,omitempty"`                                               //LowCardinality
	InproxyProxyAso                                  *string                `protobuf:"bytes,38,opt,name=inproxy_proxy_aso,json=inproxyProxyAso,proto3,oneof" json:"inproxy_proxy_aso,omitempty"`                                               //LowCardinality
	InproxyProxyCity                                 *string                `protobuf:"bytes,39,opt,name=inproxy_proxy_city,json=inproxyProxyCity,proto3,oneof" json:"inproxy_proxy_city,omitempty"`                                            //LowCardinality
	InproxyProxyClientBuildRev                       *string                `protobuf:"bytes,40,opt,name=inproxy_proxy_client_build_rev,json=inproxyProxyClientBuildRev,proto3,oneof" json:"inproxy_proxy_client_build_rev,omitempty"`          //LowCardinality
	InproxyProxyClientPlatform                       *string                `protobuf:"bytes,41,opt,name=inproxy_proxy_client_platform,json=inproxyProxyClientPlatform,proto3,oneof" json:"inproxy_proxy_client_platform,omitempty"`            //LowCardinality
	InproxyProxyClientVersion                        *int64                 `protobuf:"varint,42,opt,name=inproxy_proxy_client_version,json=inproxyProxyClientVersion,proto3,oneof" json:"inproxy_proxy_client_version,omitempty"`              //LowCardinality
	InproxyProxyConnectedClients                     *int64                 `protobuf:"varint,43,opt,name=inproxy_proxy_connected_clients,json=inproxyProxyConnectedClients,proto3,oneof" json:"inproxy_proxy_connected_clients,omitempty"`
	InproxyProxyConnectingClients                    *int64                 `protobuf:"varint,44,opt,name=inproxy_proxy_connecting_clients,json=inproxyProxyConnectingClients,proto3,oneof" json:"inproxy_proxy_connecting_clients,omitempty"`
	InproxyProxyDeviceLocation                       *string                `protobuf:"bytes,45,opt,name=inproxy_proxy_device_location,json=inproxyProxyDeviceLocation,proto3,oneof" json:"inproxy_proxy_device_location,omitempty"`
	InproxyProxyDeviceRegion                         *string                `protobuf:"bytes,46,opt,name=inproxy_proxy_device_region,json=inproxyProxyDeviceRegion,proto3,oneof" json:"inproxy_proxy_device_region,omitempty"`                     //LowCardinality
	InproxyProxyFeatures                             *string                `protobuf:"bytes,47,opt,name=inproxy_proxy_features,json=inproxyProxyFeatures,proto3,oneof" json:"inproxy_proxy_features,omitempty"`                                   //LowCardinality
	InproxyProxyFrontingProviderId                   *string                `protobuf:"bytes,48,opt,name=inproxy_proxy_fronting_provider_id,json=inproxyProxyFrontingProviderId,proto3,oneof" json:"inproxy_proxy_fronting_provider_id,omitempty"` //LowCardinality
	InproxyProxyId                                   *string                `protobuf:"bytes,49,opt,name=inproxy_proxy_id,json=inproxyProxyId,proto3,oneof" json:"inproxy_proxy_id,omitempty"`
	InproxyProxyIsPriority                           *bool                  `protobuf:"varint,50,opt,name=inproxy_proxy_is_priority,json=inproxyProxyIsPriority,proto3,oneof" json:"inproxy_proxy_is_priority,omitempty"`
	InproxyProxyIsp                                  *string                `protobuf:"bytes,51,opt,name=inproxy_proxy_isp,json=inproxyProxyIsp,proto3,oneof" json:"inproxy_proxy_isp,omitempty"` //LowCardinality
	InproxyProxyLimitDownstreamBytesPerSecond        *int64                 `protobuf:"varint,52,opt,name=inproxy_proxy_limit_downstream_bytes_per_second,json=inproxyProxyLimitDownstreamBytesPerSecond,proto3,oneof" json:"inproxy_proxy_limit_downstream_bytes_per_second,omitempty"`
	InproxyProxyLimitUpstreamBytesPerSecond          *int64                 `protobuf:"varint,53,opt,name=inproxy_proxy_limit_upstream_bytes_per_second,json=inproxyProxyLimitUpstreamBytesPerSecond,proto3,oneof" json:"inproxy_proxy_limit_upstream_bytes_per_second,omitempty"`
	InproxyProxyMaxClients                           *int64                 `protobuf:"varint,54,opt,name=inproxy_proxy_max_clients,json=inproxyProxyMaxClients,proto3,oneof" json:"inproxy_proxy_max_clients,omitempty"`
	InproxyProxyNatType                              *string                `protobuf:"bytes,55,opt,name=inproxy_proxy_nat_type,json=inproxyProxyNatType,proto3,oneof" json:"inproxy_proxy_nat_type,omitempty"`             //LowCardinality
	InproxyProxyNetworkType                          *string                `protobuf:"bytes,56,opt,name=inproxy_proxy_network_type,json=inproxyProxyNetworkType,proto3,oneof" json:"inproxy_proxy_network_type,omitempty"` //LowCardinality
	InproxyProxyPeakDownstreamBytesPerSecond         *int64                 `protobuf:"varint,57,opt,name=inproxy_proxy_peak_downstream_bytes_per_second,json=inproxyProxyPeakDownstreamBytesPerSecond,proto3,oneof" json:"inproxy_proxy_peak_downstream_bytes_per_second,omitempty"`
	InproxyProxyPeakUpstreamBytesPerSecond           *int64                 `protobuf:"varint,58,opt,name=inproxy_proxy_peak_upstream_bytes_per_second,json=inproxyProxyPeakUpstreamBytesPerSecond,proto3,oneof" json:"inproxy_proxy_peak_upstream_bytes_per_second,omitempty"`
	InproxyProxyPortMappingTypes                     []string               `protobuf:"bytes,59,rep,name=inproxy_proxy_port_mapping_types,json=inproxyProxyPortMappingTypes,proto3" json:"inproxy_proxy_port_mapping_types,omitempty"`                   //LowCardinality
	InproxyProxyPropagationChannelId                 *string                `protobuf:"bytes,60,opt,name=inproxy_proxy_propagation_channel_id,json=inproxyProxyPropagationChannelId,proto3,oneof" json:"inproxy_proxy_propagation_channel_id,omitempty"` //LowCardinality
	InproxyProxyProtocolVersion                      *int64                 `protobuf:"varint,61,opt,name=inproxy_proxy_protocol_version,json=inproxyProxyProtocolVersion,proto3,oneof" json:"inproxy_proxy_protocol_version,omitempty"`
	InproxyProxyRegion                               *string                `protobuf:"bytes,62,opt,name=inproxy_proxy_region,json=inproxyProxyRegion,proto3,oneof" json:"inproxy_proxy_region,omitempty"` //LowCardinality
	InproxyProxySessionId                            *string                `protobuf:"bytes,63,opt,name=inproxy_proxy_session_id,json=inproxyProxySessionId,proto3,oneof" json:"inproxy_proxy_session_id,omitempty"`
	InproxyProxySponsorId                            *string                `protobuf:"bytes,64,opt,name=inproxy_proxy_sponsor_id,json=inproxyProxySponsorId,proto3,oneof" json:"inproxy_proxy_sponsor_id,omitempty"`                        //LowCardinality
	InproxyProxyStoredTacticsTag                     *string                `protobuf:"bytes,65,opt,name=inproxy_proxy_stored_tactics_tag,json=inproxyProxyStoredTacticsTag,proto3,oneof" json:"inproxy_proxy_stored_tactics_tag,omitempty"` //LowCardinality
	InproxyProxyClientFeatures                       []string               `protobuf:"bytes,66,rep,name=inproxy_proxy_client_features,json=inproxyProxyClientFeatures,proto3" json:"inproxy_proxy_client_features,omitempty"`               //LowCardinality
	InproxyWebrtcDecoyMessagesReceived               *int64                 `protobuf:"varint,67,opt,name=inproxy_webrtc_decoy_messages_received,json=inproxyWebrtcDecoyMessagesReceived,proto3,oneof" json:"inproxy_webrtc_decoy_messages_received,omitempty"`
	InproxyWebrtcDecoyMessagesSent                   *int64                 `protobuf:"varint,68,opt,name=inproxy_webrtc_decoy_messages_sent,json=inproxyWebrtcDecoyMessagesSent,proto3,oneof" json:"inproxy_webrtc_decoy_messages_sent,omitempty"`
	InproxyWebrtcDnsAttempt                          *int64                 `protobuf:"varint,69,opt,name=inproxy_webrtc_dns_attempt,json=inproxyWebrtcDnsAttempt,proto3,oneof" json:"inproxy_webrtc_dns_attempt,omitempty"`
	InproxyWebrtcDnsPreferred                        *string                `protobuf:"bytes,70,opt,name=inproxy_webrtc_dns_preferred,json=inproxyWebrtcDnsPreferred,proto3,oneof" json:"inproxy_webrtc_dns_preferred,omitempty"`       //LowCardinality
	InproxyWebrtcDnsPreresolved                      *string                `protobuf:"bytes,71,opt,name=inproxy_webrtc_dns_preresolved,json=inproxyWebrtcDnsPreresolved,proto3,oneof" json:"inproxy_webrtc_dns_preresolved,omitempty"` //LowCardinality
	InproxyWebrtcDnsQnameMismatches                  *int64                 `protobuf:"varint,72,opt,name=inproxy_webrtc_dns_qname_mismatches,json=inproxyWebrtcDnsQnameMismatches,proto3,oneof" json:"inproxy_webrtc_dns_qname_mismatches,omitempty"`
	InproxyWebrtcDnsQnameMustMatch                   *bool                  `protobuf:"varint,73,opt,name=inproxy_webrtc_dns_qname_must_match,json=inproxyWebrtcDnsQnameMustMatch,proto3,oneof" json:"inproxy_webrtc_dns_qname_must_match,omitempty"`
	InproxyWebrtcDnsQnameRandomCasing                *bool                  `protobuf:"varint,74,opt,name=inproxy_webrtc_dns_qname_random_casing,json=inproxyWebrtcDnsQnameRandomCasing,proto3,oneof" json:"inproxy_webrtc_dns_qname_random_casing,omitempty"`
	InproxyWebrtcDnsTransform                        *string                `protobuf:"bytes,75,opt,name=inproxy_webrtc_dns_transform,json=inproxyWebrtcDnsTransform,proto3,oneof" json:"inproxy_webrtc_dns_transform,omitempty"` //LowCardinality
	InproxyWebrtcLocalIceCandidateIs_IPv6            *bool                  `protobuf:"varint,76,opt,name=inproxy_webrtc_local_ice_candidate_is_IPv6,json=inproxyWebrtcLocalIceCandidateIsIPv6,proto3,oneof" json:"inproxy_webrtc_local_ice_candidate_is_IPv6,omitempty"`
	InproxyWebrtcLocalIceCandidateIsInitiator        *bool                  `protobuf:"varint,77,opt,name=inproxy_webrtc_local_ice_candidate_is_initiator,json=inproxyWebrtcLocalIceCandidateIsInitiator,proto3,oneof" json:"inproxy_webrtc_local_ice_candidate_is_initiator,omitempty"`
	InproxyWebrtcLocalIceCandidatePort               *int64                 `protobuf:"varint,78,opt,name=inproxy_webrtc_local_ice_candidate_port,json=inproxyWebrtcLocalIceCandidatePort,proto3,oneof" json:"inproxy_webrtc_local_ice_candidate_port,omitempty"`
	InproxyWebrtcLocalIceCandidateType               *string                `protobuf:"bytes,79,opt,name=inproxy_webrtc_local_ice_candidate_type,json=inproxyWebrtcLocalIceCandidateType,proto3,oneof" json:"inproxy_webrtc_local_ice_candidate_type,omitempty"` //LowCardinality
	InproxyWebrtcPaddedMessagesReceived              *int64                 `protobuf:"varint,80,opt,name=inproxy_webrtc_padded_messages_received,json=inproxyWebrtcPaddedMessagesReceived,proto3,oneof" json:"inproxy_webrtc_padded_messages_received,omitempty"`
	InproxyWebrtcPaddedMessagesSent                  *int64                 `protobuf:"varint,81,opt,name=inproxy_webrtc_padded_messages_sent,json=inproxyWebrtcPaddedMessagesSent,proto3,oneof" json:"inproxy_webrtc_padded_messages_sent,omitempty"`
	InproxyWebrtcRandomizeDtls                       *bool                  `protobuf:"varint,82,opt,name=inproxy_webrtc_randomize_dtls,json=inproxyWebrtcRandomizeDtls,proto3,oneof" json:"inproxy_webrtc_randomize_dtls,omitempty"`
	InproxyWebrtcRemoteIceCandidateIs_IPv6           *bool                  `protobuf:"varint,83,opt,name=inproxy_webrtc_remote_ice_candidate_is_IPv6,json=inproxyWebrtcRemoteIceCandidateIsIPv6,proto3,oneof" json:"inproxy_webrtc_remote_ice_candidate_is_IPv6,omitempty"`
	InproxyWebrtcRemoteIceCandidatePort              *int64                 `protobuf:"varint,84,opt,name=inproxy_webrtc_remote_ice_candidate_port,json=inproxyWebrtcRemoteIceCandidatePort,proto3,oneof" json:"inproxy_webrtc_remote_ice_candidate_port,omitempty"`
	InproxyWebrtcRemoteIceCandidateType              *string                `protobuf:"bytes,85,opt,name=inproxy_webrtc_remote_ice_candidate_type,json=inproxyWebrtcRemoteIceCandidateType,proto3,oneof" json:"inproxy_webrtc_remote_ice_candidate_type,omitempty"`                                         //LowCardinality
	InproxyWebrtcStunServer                          *string                `protobuf:"bytes,86,opt,name=inproxy_webrtc_stun_server,json=inproxyWebrtcStunServer,proto3,oneof" json:"inproxy_webrtc_stun_server,omitempty"`                                                                                 //LowCardinality
	InproxyWebrtcStunServer_RFC5780                  *string                `protobuf:"bytes,87,opt,name=inproxy_webrtc_stun_server_RFC5780,json=inproxyWebrtcStunServerRFC5780,proto3,oneof" json:"inproxy_webrtc_stun_server_RFC5780,omitempty"`                                                          //LowCardinality
	InproxyWebrtcStunServer_RFC5780ResolvedIpAddress *string                `protobuf:"bytes,88,opt,name=inproxy_webrtc_stun_server_RFC5780_resolved_ip_address,json=inproxyWebrtcStunServerRFC5780ResolvedIpAddress,proto3,oneof" json:"inproxy_webrtc_stun_server_RFC5780_resolved_ip_address,omitempty"` //LowCardinality
	InproxyWebrtcStunServerResolvedIpAddress         *string                `protobuf:"bytes,89,opt,name=inproxy_webrtc_stun_server_resolved_ip_address,json=inproxyWebrtcStunServerResolvedIpAddress,proto3,oneof" json:"inproxy_webrtc_stun_server_resolved_ip_address,omitempty"`                        //LowCardinality
	InproxyWebrtcUseMediaStreams                     *bool                  `protobuf:"varint,90,opt,name=inproxy_webrtc_use_media_streams,json=inproxyWebrtcUseMediaStreams,proto3,oneof" json:"inproxy_webrtc_use_media_streams,omitempty"`
	unknownFields                                    protoimpl.UnknownFields
	sizeCache                                        protoimpl.SizeCache
}

func (x *MetadataInproxy) Reset() {
	*x = MetadataInproxy{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataInproxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataInproxy) ProtoMessage() {}

func (x *MetadataInproxy) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataInproxy.ProtoReflect.Descriptor instead.
func (*MetadataInproxy) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{4}
}

func (x *MetadataInproxy) GetInproxyBrokerClientBpf() string {
	if x != nil && x.InproxyBrokerClientBpf != nil {
		return *x.InproxyBrokerClientBpf
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerDialAddress() string {
	if x != nil && x.InproxyBrokerDialAddress != nil {
		return *x.InproxyBrokerDialAddress
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerDnsAttempt() int64 {
	if x != nil && x.InproxyBrokerDnsAttempt != nil {
		return *x.InproxyBrokerDnsAttempt
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyBrokerDnsPreferred() string {
	if x != nil && x.InproxyBrokerDnsPreferred != nil {
		return *x.InproxyBrokerDnsPreferred
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerDnsPreresolved() string {
	if x != nil && x.InproxyBrokerDnsPreresolved != nil {
		return *x.InproxyBrokerDnsPreresolved
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerDnsQnameMismatches() int64 {
	if x != nil && x.InproxyBrokerDnsQnameMismatches != nil {
		return *x.InproxyBrokerDnsQnameMismatches
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyBrokerDnsQnameMustMatch() bool {
	if x != nil && x.InproxyBrokerDnsQnameMustMatch != nil {
		return *x.InproxyBrokerDnsQnameMustMatch
	}
	return false
}

func (x *MetadataInproxy) GetInproxyBrokerDnsQnameRandomCasing() bool {
	if x != nil && x.InproxyBrokerDnsQnameRandomCasing != nil {
		return *x.InproxyBrokerDnsQnameRandomCasing
	}
	return false
}

func (x *MetadataInproxy) GetInproxyBrokerDnsTransform() string {
	if x != nil && x.InproxyBrokerDnsTransform != nil {
		return *x.InproxyBrokerDnsTransform
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerDownstreamBytesFragmented() int64 {
	if x != nil && x.InproxyBrokerDownstreamBytesFragmented != nil {
		return *x.InproxyBrokerDownstreamBytesFragmented
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyBrokerFrontingProviderId() string {
	if x != nil && x.InproxyBrokerFrontingProviderId != nil {
		return *x.InproxyBrokerFrontingProviderId
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerHostHeader() string {
	if x != nil && x.InproxyBrokerHostHeader != nil {
		return *x.InproxyBrokerHostHeader
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerHttpTransform() string {
	if x != nil && x.InproxyBrokerHttpTransform != nil {
		return *x.InproxyBrokerHttpTransform
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerId() string {
	if x != nil && x.InproxyBrokerId != nil {
		return *x.InproxyBrokerId
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerIsReplay() bool {
	if x != nil && x.InproxyBrokerIsReplay != nil {
		return *x.InproxyBrokerIsReplay
	}
	return false
}

func (x *MetadataInproxy) GetInproxyBrokerIsReuse() bool {
	if x != nil && x.InproxyBrokerIsReuse != nil {
		return *x.InproxyBrokerIsReuse
	}
	return false
}

func (x *MetadataInproxy) GetInproxyBrokerResolvedIpAddress() string {
	if x != nil && x.InproxyBrokerResolvedIpAddress != nil {
		return *x.InproxyBrokerResolvedIpAddress
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerSniServerName() string {
	if x != nil && x.InproxyBrokerSniServerName != nil {
		return *x.InproxyBrokerSniServerName
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerTlsFragmented() bool {
	if x != nil && x.InproxyBrokerTlsFragmented != nil {
		return *x.InproxyBrokerTlsFragmented
	}
	return false
}

func (x *MetadataInproxy) GetInproxyBrokerTlsProfile() string {
	if x != nil && x.InproxyBrokerTlsProfile != nil {
		return *x.InproxyBrokerTlsProfile
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerTlsVersion() string {
	if x != nil && x.InproxyBrokerTlsVersion != nil {
		return *x.InproxyBrokerTlsVersion
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerTransformedHostName() bool {
	if x != nil && x.InproxyBrokerTransformedHostName != nil {
		return *x.InproxyBrokerTransformedHostName
	}
	return false
}

func (x *MetadataInproxy) GetInproxyBrokerTransport() string {
	if x != nil && x.InproxyBrokerTransport != nil {
		return *x.InproxyBrokerTransport
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyBrokerUpstreamBytesFragmented() int64 {
	if x != nil && x.InproxyBrokerUpstreamBytesFragmented != nil {
		return *x.InproxyBrokerUpstreamBytesFragmented
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyBrokerUserAgent() string {
	if x != nil && x.InproxyBrokerUserAgent != nil {
		return *x.InproxyBrokerUserAgent
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyClientNatType() string {
	if x != nil && x.InproxyClientNatType != nil {
		return *x.InproxyClientNatType
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyClientPortMappingTypes() []string {
	if x != nil {
		return x.InproxyClientPortMappingTypes
	}
	return nil
}

func (x *MetadataInproxy) GetInproxyConnectionId() string {
	if x != nil && x.InproxyConnectionId != nil {
		return *x.InproxyConnectionId
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyDialBrokerOfferDuration() int64 {
	if x != nil && x.InproxyDialBrokerOfferDuration != nil {
		return *x.InproxyDialBrokerOfferDuration
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyDialFailedAttemptsDuration() int64 {
	if x != nil && x.InproxyDialFailedAttemptsDuration != nil {
		return *x.InproxyDialFailedAttemptsDuration
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyDialNatDisoveryDuration() int64 {
	if x != nil && x.InproxyDialNatDisoveryDuration != nil {
		return *x.InproxyDialNatDisoveryDuration
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyDialWebrtcConnectionDuration() int64 {
	if x != nil && x.InproxyDialWebrtcConnectionDuration != nil {
		return *x.InproxyDialWebrtcConnectionDuration
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyDialWebrtcIceGatheringDuration() int64 {
	if x != nil && x.InproxyDialWebrtcIceGatheringDuration != nil {
		return *x.InproxyDialWebrtcIceGatheringDuration
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyMatchedCommonCompartments() bool {
	if x != nil && x.InproxyMatchedCommonCompartments != nil {
		return *x.InproxyMatchedCommonCompartments
	}
	return false
}

func (x *MetadataInproxy) GetInproxyMatchedPersonalCompartments() bool {
	if x != nil && x.InproxyMatchedPersonalCompartments != nil {
		return *x.InproxyMatchedPersonalCompartments
	}
	return false
}

func (x *MetadataInproxy) GetInproxyProxyAppliedTacticsTag() string {
	if x != nil && x.InproxyProxyAppliedTacticsTag != nil {
		return *x.InproxyProxyAppliedTacticsTag
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyAsn() string {
	if x != nil && x.InproxyProxyAsn != nil {
		return *x.InproxyProxyAsn
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyAso() string {
	if x != nil && x.InproxyProxyAso != nil {
		return *x.InproxyProxyAso
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyCity() string {
	if x != nil && x.InproxyProxyCity != nil {
		return *x.InproxyProxyCity
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyClientBuildRev() string {
	if x != nil && x.InproxyProxyClientBuildRev != nil {
		return *x.InproxyProxyClientBuildRev
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyClientPlatform() string {
	if x != nil && x.InproxyProxyClientPlatform != nil {
		return *x.InproxyProxyClientPlatform
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyClientVersion() int64 {
	if x != nil && x.InproxyProxyClientVersion != nil {
		return *x.InproxyProxyClientVersion
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyProxyConnectedClients() int64 {
	if x != nil && x.InproxyProxyConnectedClients != nil {
		return *x.InproxyProxyConnectedClients
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyProxyConnectingClients() int64 {
	if x != nil && x.InproxyProxyConnectingClients != nil {
		return *x.InproxyProxyConnectingClients
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyProxyDeviceLocation() string {
	if x != nil && x.InproxyProxyDeviceLocation != nil {
		return *x.InproxyProxyDeviceLocation
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyDeviceRegion() string {
	if x != nil && x.InproxyProxyDeviceRegion != nil {
		return *x.InproxyProxyDeviceRegion
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyFeatures() string {
	if x != nil && x.InproxyProxyFeatures != nil {
		return *x.InproxyProxyFeatures
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyFrontingProviderId() string {
	if x != nil && x.InproxyProxyFrontingProviderId != nil {
		return *x.InproxyProxyFrontingProviderId
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyId() string {
	if x != nil && x.InproxyProxyId != nil {
		return *x.InproxyProxyId
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyIsPriority() bool {
	if x != nil && x.InproxyProxyIsPriority != nil {
		return *x.InproxyProxyIsPriority
	}
	return false
}

func (x *MetadataInproxy) GetInproxyProxyIsp() string {
	if x != nil && x.InproxyProxyIsp != nil {
		return *x.InproxyProxyIsp
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyLimitDownstreamBytesPerSecond() int64 {
	if x != nil && x.InproxyProxyLimitDownstreamBytesPerSecond != nil {
		return *x.InproxyProxyLimitDownstreamBytesPerSecond
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyProxyLimitUpstreamBytesPerSecond() int64 {
	if x != nil && x.InproxyProxyLimitUpstreamBytesPerSecond != nil {
		return *x.InproxyProxyLimitUpstreamBytesPerSecond
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyProxyMaxClients() int64 {
	if x != nil && x.InproxyProxyMaxClients != nil {
		return *x.InproxyProxyMaxClients
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyProxyNatType() string {
	if x != nil && x.InproxyProxyNatType != nil {
		return *x.InproxyProxyNatType
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyNetworkType() string {
	if x != nil && x.InproxyProxyNetworkType != nil {
		return *x.InproxyProxyNetworkType
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyPeakDownstreamBytesPerSecond() int64 {
	if x != nil && x.InproxyProxyPeakDownstreamBytesPerSecond != nil {
		return *x.InproxyProxyPeakDownstreamBytesPerSecond
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyProxyPeakUpstreamBytesPerSecond() int64 {
	if x != nil && x.InproxyProxyPeakUpstreamBytesPerSecond != nil {
		return *x.InproxyProxyPeakUpstreamBytesPerSecond
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyProxyPortMappingTypes() []string {
	if x != nil {
		return x.InproxyProxyPortMappingTypes
	}
	return nil
}

func (x *MetadataInproxy) GetInproxyProxyPropagationChannelId() string {
	if x != nil && x.InproxyProxyPropagationChannelId != nil {
		return *x.InproxyProxyPropagationChannelId
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyProtocolVersion() int64 {
	if x != nil && x.InproxyProxyProtocolVersion != nil {
		return *x.InproxyProxyProtocolVersion
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyProxyRegion() string {
	if x != nil && x.InproxyProxyRegion != nil {
		return *x.InproxyProxyRegion
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxySessionId() string {
	if x != nil && x.InproxyProxySessionId != nil {
		return *x.InproxyProxySessionId
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxySponsorId() string {
	if x != nil && x.InproxyProxySponsorId != nil {
		return *x.InproxyProxySponsorId
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyStoredTacticsTag() string {
	if x != nil && x.InproxyProxyStoredTacticsTag != nil {
		return *x.InproxyProxyStoredTacticsTag
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyProxyClientFeatures() []string {
	if x != nil {
		return x.InproxyProxyClientFeatures
	}
	return nil
}

func (x *MetadataInproxy) GetInproxyWebrtcDecoyMessagesReceived() int64 {
	if x != nil && x.InproxyWebrtcDecoyMessagesReceived != nil {
		return *x.InproxyWebrtcDecoyMessagesReceived
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyWebrtcDecoyMessagesSent() int64 {
	if x != nil && x.InproxyWebrtcDecoyMessagesSent != nil {
		return *x.InproxyWebrtcDecoyMessagesSent
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyWebrtcDnsAttempt() int64 {
	if x != nil && x.InproxyWebrtcDnsAttempt != nil {
		return *x.InproxyWebrtcDnsAttempt
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyWebrtcDnsPreferred() string {
	if x != nil && x.InproxyWebrtcDnsPreferred != nil {
		return *x.InproxyWebrtcDnsPreferred
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyWebrtcDnsPreresolved() string {
	if x != nil && x.InproxyWebrtcDnsPreresolved != nil {
		return *x.InproxyWebrtcDnsPreresolved
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyWebrtcDnsQnameMismatches() int64 {
	if x != nil && x.InproxyWebrtcDnsQnameMismatches != nil {
		return *x.InproxyWebrtcDnsQnameMismatches
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyWebrtcDnsQnameMustMatch() bool {
	if x != nil && x.InproxyWebrtcDnsQnameMustMatch != nil {
		return *x.InproxyWebrtcDnsQnameMustMatch
	}
	return false
}

func (x *MetadataInproxy) GetInproxyWebrtcDnsQnameRandomCasing() bool {
	if x != nil && x.InproxyWebrtcDnsQnameRandomCasing != nil {
		return *x.InproxyWebrtcDnsQnameRandomCasing
	}
	return false
}

func (x *MetadataInproxy) GetInproxyWebrtcDnsTransform() string {
	if x != nil && x.InproxyWebrtcDnsTransform != nil {
		return *x.InproxyWebrtcDnsTransform
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyWebrtcLocalIceCandidateIs_IPv6() bool {
	if x != nil && x.InproxyWebrtcLocalIceCandidateIs_IPv6 != nil {
		return *x.InproxyWebrtcLocalIceCandidateIs_IPv6
	}
	return false
}

func (x *MetadataInproxy) GetInproxyWebrtcLocalIceCandidateIsInitiator() bool {
	if x != nil && x.InproxyWebrtcLocalIceCandidateIsInitiator != nil {
		return *x.InproxyWebrtcLocalIceCandidateIsInitiator
	}
	return false
}

func (x *MetadataInproxy) GetInproxyWebrtcLocalIceCandidatePort() int64 {
	if x != nil && x.InproxyWebrtcLocalIceCandidatePort != nil {
		return *x.InproxyWebrtcLocalIceCandidatePort
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyWebrtcLocalIceCandidateType() string {
	if x != nil && x.InproxyWebrtcLocalIceCandidateType != nil {
		return *x.InproxyWebrtcLocalIceCandidateType
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyWebrtcPaddedMessagesReceived() int64 {
	if x != nil && x.InproxyWebrtcPaddedMessagesReceived != nil {
		return *x.InproxyWebrtcPaddedMessagesReceived
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyWebrtcPaddedMessagesSent() int64 {
	if x != nil && x.InproxyWebrtcPaddedMessagesSent != nil {
		return *x.InproxyWebrtcPaddedMessagesSent
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyWebrtcRandomizeDtls() bool {
	if x != nil && x.InproxyWebrtcRandomizeDtls != nil {
		return *x.InproxyWebrtcRandomizeDtls
	}
	return false
}

func (x *MetadataInproxy) GetInproxyWebrtcRemoteIceCandidateIs_IPv6() bool {
	if x != nil && x.InproxyWebrtcRemoteIceCandidateIs_IPv6 != nil {
		return *x.InproxyWebrtcRemoteIceCandidateIs_IPv6
	}
	return false
}

func (x *MetadataInproxy) GetInproxyWebrtcRemoteIceCandidatePort() int64 {
	if x != nil && x.InproxyWebrtcRemoteIceCandidatePort != nil {
		return *x.InproxyWebrtcRemoteIceCandidatePort
	}
	return 0
}

func (x *MetadataInproxy) GetInproxyWebrtcRemoteIceCandidateType() string {
	if x != nil && x.InproxyWebrtcRemoteIceCandidateType != nil {
		return *x.InproxyWebrtcRemoteIceCandidateType
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyWebrtcStunServer() string {
	if x != nil && x.InproxyWebrtcStunServer != nil {
		return *x.InproxyWebrtcStunServer
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyWebrtcStunServer_RFC5780() string {
	if x != nil && x.InproxyWebrtcStunServer_RFC5780 != nil {
		return *x.InproxyWebrtcStunServer_RFC5780
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyWebrtcStunServer_RFC5780ResolvedIpAddress() string {
	if x != nil && x.InproxyWebrtcStunServer_RFC5780ResolvedIpAddress != nil {
		return *x.InproxyWebrtcStunServer_RFC5780ResolvedIpAddress
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyWebrtcStunServerResolvedIpAddress() string {
	if x != nil && x.InproxyWebrtcStunServerResolvedIpAddress != nil {
		return *x.InproxyWebrtcStunServerResolvedIpAddress
	}
	return ""
}

func (x *MetadataInproxy) GetInproxyWebrtcUseMediaStreams() bool {
	if x != nil && x.InproxyWebrtcUseMediaStreams != nil {
		return *x.InproxyWebrtcUseMediaStreams
	}
	return false
}

type MetadataConjure struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConjureCached      *bool                  `protobuf:"varint,1,opt,name=conjure_cached,json=conjureCached,proto3,oneof" json:"conjure_cached,omitempty"`
	ConjureDelay       *int64                 `protobuf:"varint,2,opt,name=conjure_delay,json=conjureDelay,proto3,oneof" json:"conjure_delay,omitempty"`
	ConjureEmptyPacket *bool                  `protobuf:"varint,3,opt,name=conjure_empty_packet,json=conjureEmptyPacket,proto3,oneof" json:"conjure_empty_packet,omitempty"`
	ConjureNetwork     *string                `protobuf:"bytes,4,opt,name=conjure_network,json=conjureNetwork,proto3,oneof" json:"conjure_network,omitempty"` //LowCardinality
	ConjurePortNumber  *int64                 `protobuf:"varint,5,opt,name=conjure_port_number,json=conjurePortNumber,proto3,oneof" json:"conjure_port_number,omitempty"`
	ConjurePrefix      *string                `protobuf:"bytes,6,opt,name=conjure_prefix,json=conjurePrefix,proto3,oneof" json:"conjure_prefix,omitempty"`          //LowCardinality
	ConjureStun        *string                `protobuf:"bytes,7,opt,name=conjure_stun,json=conjureStun,proto3,oneof" json:"conjure_stun,omitempty"`                //LowCardinality
	ConjureTransport   *string                `protobuf:"bytes,8,opt,name=conjure_transport,json=conjureTransport,proto3,oneof" json:"conjure_transport,omitempty"` //LowCardinality
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MetadataConjure) Reset() {
	*x = MetadataConjure{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataConjure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataConjure) ProtoMessage() {}

func (x *MetadataConjure) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataConjure.ProtoReflect.Descriptor instead.
func (*MetadataConjure) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{5}
}

func (x *MetadataConjure) GetConjureCached() bool {
	if x != nil && x.ConjureCached != nil {
		return *x.ConjureCached
	}
	return false
}

func (x *MetadataConjure) GetConjureDelay() int64 {
	if x != nil && x.ConjureDelay != nil {
		return *x.ConjureDelay
	}
	return 0
}

func (x *MetadataConjure) GetConjureEmptyPacket() bool {
	if x != nil && x.ConjureEmptyPacket != nil {
		return *x.ConjureEmptyPacket
	}
	return false
}

func (x *MetadataConjure) GetConjureNetwork() string {
	if x != nil && x.ConjureNetwork != nil {
		return *x.ConjureNetwork
	}
	return ""
}

func (x *MetadataConjure) GetConjurePortNumber() int64 {
	if x != nil && x.ConjurePortNumber != nil {
		return *x.ConjurePortNumber
	}
	return 0
}

func (x *MetadataConjure) GetConjurePrefix() string {
	if x != nil && x.ConjurePrefix != nil {
		return *x.ConjurePrefix
	}
	return ""
}

func (x *MetadataConjure) GetConjureStun() string {
	if x != nil && x.ConjureStun != nil {
		return *x.ConjureStun
	}
	return ""
}

func (x *MetadataConjure) GetConjureTransport() string {
	if x != nil && x.ConjureTransport != nil {
		return *x.ConjureTransport
	}
	return ""
}

type MetadataMeek struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	MeekCachedResponseMissPosition *int64                 `protobuf:"varint,1,opt,name=meek_cached_response_miss_position,json=meekCachedResponseMissPosition,proto3,oneof" json:"meek_cached_response_miss_position,omitempty"`
	MeekClientRetries              *int64                 `protobuf:"varint,2,opt,name=meek_client_retries,json=meekClientRetries,proto3,oneof" json:"meek_client_retries,omitempty"`
	MeekCookieSize                 *int64                 `protobuf:"varint,3,opt,name=meek_cookie_size,json=meekCookieSize,proto3,oneof" json:"meek_cookie_size,omitempty"`
	MeekDialDomain                 *string                `protobuf:"bytes,4,opt,name=meek_dial_domain,json=meekDialDomain,proto3,oneof" json:"meek_dial_domain,omitempty"`            //LowCardinality
	MeekDialIpAddress              *string                `protobuf:"bytes,5,opt,name=meek_dial_ip_address,json=meekDialIpAddress,proto3,oneof" json:"meek_dial_ip_address,omitempty"` //LowCardinality
	MeekHostHeader                 *string                `protobuf:"bytes,6,opt,name=meek_host_header,json=meekHostHeader,proto3,oneof" json:"meek_host_header,omitempty"`
	MeekLimitRequest               *int64                 `protobuf:"varint,7,opt,name=meek_limit_request,json=meekLimitRequest,proto3,oneof" json:"meek_limit_request,omitempty"`
	MeekPeakCachedResponseHitSize  *int64                 `protobuf:"varint,8,opt,name=meek_peak_cached_response_hit_size,json=meekPeakCachedResponseHitSize,proto3,oneof" json:"meek_peak_cached_response_hit_size,omitempty"`
	MeekPeakCachedResponseSize     *int64                 `protobuf:"varint,9,opt,name=meek_peak_cached_response_size,json=meekPeakCachedResponseSize,proto3,oneof" json:"meek_peak_cached_response_size,omitempty"`
	MeekPeakResponseSize           *int64                 `protobuf:"varint,10,opt,name=meek_peak_response_size,json=meekPeakResponseSize,proto3,oneof" json:"meek_peak_response_size,omitempty"`
	MeekRedialProbability          *int64                 `protobuf:"varint,11,opt,name=meek_redial_probability,json=meekRedialProbability,proto3,oneof" json:"meek_redial_probability,omitempty"`
	MeekResolvedIpAddress          *string                `protobuf:"bytes,12,opt,name=meek_resolved_ip_address,json=meekResolvedIpAddress,proto3,oneof" json:"meek_resolved_ip_address,omitempty"` //LowCardinality
	MeekSniServerName              *string                `protobuf:"bytes,13,opt,name=meek_sni_server_name,json=meekSniServerName,proto3,oneof" json:"meek_sni_server_name,omitempty"`
	MeekTlsPadding                 *int64                 `protobuf:"varint,14,opt,name=meek_tls_padding,json=meekTlsPadding,proto3,oneof" json:"meek_tls_padding,omitempty"`
	MeekTransformedHostName        *bool                  `protobuf:"varint,15,opt,name=meek_transformed_host_name,json=meekTransformedHostName,proto3,oneof" json:"meek_transformed_host_name,omitempty"`
	MeekUnderlyingConnectionCount  *int64                 `protobuf:"varint,16,opt,name=meek_underlying_connection_count,json=meekUnderlyingConnectionCount,proto3,oneof" json:"meek_underlying_connection_count,omitempty"`
	MeekServerHttpVersion          *string                `protobuf:"bytes,17,opt,name=meek_server_http_version,json=meekServerHttpVersion,proto3,oneof" json:"meek_server_http_version,omitempty"` //LowCardinality
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *MetadataMeek) Reset() {
	*x = MetadataMeek{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataMeek) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMeek) ProtoMessage() {}

func (x *MetadataMeek) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMeek.ProtoReflect.Descriptor instead.
func (*MetadataMeek) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{6}
}

func (x *MetadataMeek) GetMeekCachedResponseMissPosition() int64 {
	if x != nil && x.MeekCachedResponseMissPosition != nil {
		return *x.MeekCachedResponseMissPosition
	}
	return 0
}

func (x *MetadataMeek) GetMeekClientRetries() int64 {
	if x != nil && x.MeekClientRetries != nil {
		return *x.MeekClientRetries
	}
	return 0
}

func (x *MetadataMeek) GetMeekCookieSize() int64 {
	if x != nil && x.MeekCookieSize != nil {
		return *x.MeekCookieSize
	}
	return 0
}

func (x *MetadataMeek) GetMeekDialDomain() string {
	if x != nil && x.MeekDialDomain != nil {
		return *x.MeekDialDomain
	}
	return ""
}

func (x *MetadataMeek) GetMeekDialIpAddress() string {
	if x != nil && x.MeekDialIpAddress != nil {
		return *x.MeekDialIpAddress
	}
	return ""
}

func (x *MetadataMeek) GetMeekHostHeader() string {
	if x != nil && x.MeekHostHeader != nil {
		return *x.MeekHostHeader
	}
	return ""
}

func (x *MetadataMeek) GetMeekLimitRequest() int64 {
	if x != nil && x.MeekLimitRequest != nil {
		return *x.MeekLimitRequest
	}
	return 0
}

func (x *MetadataMeek) GetMeekPeakCachedResponseHitSize() int64 {
	if x != nil && x.MeekPeakCachedResponseHitSize != nil {
		return *x.MeekPeakCachedResponseHitSize
	}
	return 0
}

func (x *MetadataMeek) GetMeekPeakCachedResponseSize() int64 {
	if x != nil && x.MeekPeakCachedResponseSize != nil {
		return *x.MeekPeakCachedResponseSize
	}
	return 0
}

func (x *MetadataMeek) GetMeekPeakResponseSize() int64 {
	if x != nil && x.MeekPeakResponseSize != nil {
		return *x.MeekPeakResponseSize
	}
	return 0
}

func (x *MetadataMeek) GetMeekRedialProbability() int64 {
	if x != nil && x.MeekRedialProbability != nil {
		return *x.MeekRedialProbability
	}
	return 0
}

func (x *MetadataMeek) GetMeekResolvedIpAddress() string {
	if x != nil && x.MeekResolvedIpAddress != nil {
		return *x.MeekResolvedIpAddress
	}
	return ""
}

func (x *MetadataMeek) GetMeekSniServerName() string {
	if x != nil && x.MeekSniServerName != nil {
		return *x.MeekSniServerName
	}
	return ""
}

func (x *MetadataMeek) GetMeekTlsPadding() int64 {
	if x != nil && x.MeekTlsPadding != nil {
		return *x.MeekTlsPadding
	}
	return 0
}

func (x *MetadataMeek) GetMeekTransformedHostName() bool {
	if x != nil && x.MeekTransformedHostName != nil {
		return *x.MeekTransformedHostName
	}
	return false
}

func (x *MetadataMeek) GetMeekUnderlyingConnectionCount() int64 {
	if x != nil && x.MeekUnderlyingConnectionCount != nil {
		return *x.MeekUnderlyingConnectionCount
	}
	return 0
}

func (x *MetadataMeek) GetMeekServerHttpVersion() string {
	if x != nil && x.MeekServerHttpVersion != nil {
		return *x.MeekServerHttpVersion
	}
	return ""
}

type MetadataQuic struct {
	state                             protoimpl.MessageState `protogen:"open.v1"`
	QuicDialEarly                     *bool                  `protobuf:"varint,1,opt,name=quic_dial_early,json=quicDialEarly,proto3,oneof" json:"quic_dial_early,omitempty"`
	QuicDialSniAddress                *string                `protobuf:"bytes,2,opt,name=quic_dial_sni_address,json=quicDialSniAddress,proto3,oneof" json:"quic_dial_sni_address,omitempty"`
	QuicDidResume                     *bool                  `protobuf:"varint,3,opt,name=quic_did_resume,json=quicDidResume,proto3,oneof" json:"quic_did_resume,omitempty"`
	QuicDisableClientPathMtuDiscovery *bool                  `protobuf:"varint,4,opt,name=quic_disable_client_path_mtu_discovery,json=quicDisableClientPathMtuDiscovery,proto3,oneof" json:"quic_disable_client_path_mtu_discovery,omitempty"`
	QuicObfuscatedPsk                 *bool                  `protobuf:"varint,5,opt,name=quic_obfuscated_psk,json=quicObfuscatedPsk,proto3,oneof" json:"quic_obfuscated_psk,omitempty"`
	QuicSentTicket                    *bool                  `protobuf:"varint,6,opt,name=quic_sent_ticket,json=quicSentTicket,proto3,oneof" json:"quic_sent_ticket,omitempty"`
	QuicVersion                       *string                `protobuf:"bytes,7,opt,name=quic_version,json=quicVersion,proto3,oneof" json:"quic_version,omitempty"` //LowCardinality
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *MetadataQuic) Reset() {
	*x = MetadataQuic{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataQuic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataQuic) ProtoMessage() {}

func (x *MetadataQuic) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataQuic.ProtoReflect.Descriptor instead.
func (*MetadataQuic) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{7}
}

func (x *MetadataQuic) GetQuicDialEarly() bool {
	if x != nil && x.QuicDialEarly != nil {
		return *x.QuicDialEarly
	}
	return false
}

func (x *MetadataQuic) GetQuicDialSniAddress() string {
	if x != nil && x.QuicDialSniAddress != nil {
		return *x.QuicDialSniAddress
	}
	return ""
}

func (x *MetadataQuic) GetQuicDidResume() bool {
	if x != nil && x.QuicDidResume != nil {
		return *x.QuicDidResume
	}
	return false
}

func (x *MetadataQuic) GetQuicDisableClientPathMtuDiscovery() bool {
	if x != nil && x.QuicDisableClientPathMtuDiscovery != nil {
		return *x.QuicDisableClientPathMtuDiscovery
	}
	return false
}

func (x *MetadataQuic) GetQuicObfuscatedPsk() bool {
	if x != nil && x.QuicObfuscatedPsk != nil {
		return *x.QuicObfuscatedPsk
	}
	return false
}

func (x *MetadataQuic) GetQuicSentTicket() bool {
	if x != nil && x.QuicSentTicket != nil {
		return *x.QuicSentTicket
	}
	return false
}

func (x *MetadataQuic) GetQuicVersion() string {
	if x != nil && x.QuicVersion != nil {
		return *x.QuicVersion
	}
	return ""
}

type MetadataTLS struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	TlsDidResume               *bool                  `protobuf:"varint,1,opt,name=tls_did_resume,json=tlsDidResume,proto3,oneof" json:"tls_did_resume,omitempty"`
	TlsFragmented              *bool                  `protobuf:"varint,2,opt,name=tls_fragmented,json=tlsFragmented,proto3,oneof" json:"tls_fragmented,omitempty"`
	TlsOsshSniServerName       *string                `protobuf:"bytes,3,opt,name=tls_ossh_sni_server_name,json=tlsOsshSniServerName,proto3,oneof" json:"tls_ossh_sni_server_name,omitempty"`
	TlsOsshTransformedHostName *bool                  `protobuf:"varint,4,opt,name=tls_ossh_transformed_host_name,json=tlsOsshTransformedHostName,proto3,oneof" json:"tls_ossh_transformed_host_name,omitempty"`
	TlsPadding                 *int64                 `protobuf:"varint,5,opt,name=tls_padding,json=tlsPadding,proto3,oneof" json:"tls_padding,omitempty"`
	TlsProfile                 *string                `protobuf:"bytes,6,opt,name=tls_profile,json=tlsProfile,proto3,oneof" json:"tls_profile,omitempty"` //LowCardinality
	TlsSentTicket              *bool                  `protobuf:"varint,7,opt,name=tls_sent_ticket,json=tlsSentTicket,proto3,oneof" json:"tls_sent_ticket,omitempty"`
	TlsVersion                 *string                `protobuf:"bytes,8,opt,name=tls_version,json=tlsVersion,proto3,oneof" json:"tls_version,omitempty"` //LowCardinality
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *MetadataTLS) Reset() {
	*x = MetadataTLS{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataTLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataTLS) ProtoMessage() {}

func (x *MetadataTLS) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataTLS.ProtoReflect.Descriptor instead.
func (*MetadataTLS) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{8}
}

func (x *MetadataTLS) GetTlsDidResume() bool {
	if x != nil && x.TlsDidResume != nil {
		return *x.TlsDidResume
	}
	return false
}

func (x *MetadataTLS) GetTlsFragmented() bool {
	if x != nil && x.TlsFragmented != nil {
		return *x.TlsFragmented
	}
	return false
}

func (x *MetadataTLS) GetTlsOsshSniServerName() string {
	if x != nil && x.TlsOsshSniServerName != nil {
		return *x.TlsOsshSniServerName
	}
	return ""
}

func (x *MetadataTLS) GetTlsOsshTransformedHostName() bool {
	if x != nil && x.TlsOsshTransformedHostName != nil {
		return *x.TlsOsshTransformedHostName
	}
	return false
}

func (x *MetadataTLS) GetTlsPadding() int64 {
	if x != nil && x.TlsPadding != nil {
		return *x.TlsPadding
	}
	return 0
}

func (x *MetadataTLS) GetTlsProfile() string {
	if x != nil && x.TlsProfile != nil {
		return *x.TlsProfile
	}
	return ""
}

func (x *MetadataTLS) GetTlsSentTicket() bool {
	if x != nil && x.TlsSentTicket != nil {
		return *x.TlsSentTicket
	}
	return false
}

func (x *MetadataTLS) GetTlsVersion() string {
	if x != nil && x.TlsVersion != nil {
		return *x.TlsVersion
	}
	return ""
}

type MetadataShadowsocks struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ShadowsocksPrefix *string                `protobuf:"bytes,1,opt,name=shadowsocks_prefix,json=shadowsocksPrefix,proto3,oneof" json:"shadowsocks_prefix,omitempty"` //LowCardinality
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MetadataShadowsocks) Reset() {
	*x = MetadataShadowsocks{}
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataShadowsocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataShadowsocks) ProtoMessage() {}

func (x *MetadataShadowsocks) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_metadata_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataShadowsocks.ProtoReflect.Descriptor instead.
func (*MetadataShadowsocks) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP(), []int{9}
}

func (x *MetadataShadowsocks) GetShadowsocksPrefix() string {
	if x != nil && x.ShadowsocksPrefix != nil {
		return *x.ShadowsocksPrefix
	}
	return ""
}

var File_ca_psiphon_psiphond_metadata_proto protoreflect.FileDescriptor

const file_ca_psiphon_psiphond_metadata_proto_rawDesc = "" +
	"\n" +
	"\"ca.psiphon.psiphond/metadata.proto\x12\x13ca.psiphon.psiphond\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbc\x04\n" +
	"\x0eMetadataClient\x12\"\n" +
	"\n" +
	"client_asn\x18\x01 \x01(\tH\x00R\tclientAsn\x88\x01\x01\x12\"\n" +
	"\n" +
	"client_aso\x18\x02 \x01(\tH\x01R\tclientAso\x88\x01\x01\x12\"\n" +
	"\n" +
	"client_bpf\x18\x03 \x01(\tH\x02R\tclientBpf\x88\x01\x01\x12-\n" +
	"\x10client_build_rev\x18\x04 \x01(\tH\x03R\x0eclientBuildRev\x88\x01\x01\x12$\n" +
	"\vclient_city\x18\x05 \x01(\tH\x04R\n" +
	"clientCity\x88\x01\x01\x12'\n" +
	"\x0fclient_features\x18\x06 \x03(\tR\x0eclientFeatures\x12\"\n" +
	"\n" +
	"client_isp\x18\a \x01(\tH\x05R\tclientIsp\x88\x01\x01\x12,\n" +
	"\x0fclient_platform\x18\b \x01(\tH\x06R\x0eclientPlatform\x88\x01\x01\x12(\n" +
	"\rclient_region\x18\t \x01(\tH\aR\fclientRegion\x88\x01\x01\x12*\n" +
	"\x0eclient_version\x18\n" +
	" \x01(\x03H\bR\rclientVersion\x88\x01\x01B\r\n" +
	"\v_client_asnB\r\n" +
	"\v_client_asoB\r\n" +
	"\v_client_bpfB\x13\n" +
	"\x11_client_build_revB\x0e\n" +
	"\f_client_cityB\r\n" +
	"\v_client_ispB\x12\n" +
	"\x10_client_platformB\x10\n" +
	"\x0e_client_regionB\x11\n" +
	"\x0f_client_version\"\x8e\x01\n" +
	"\x0eMetadataDevice\x12,\n" +
	"\x0fdevice_location\x18\x01 \x01(\tH\x00R\x0edeviceLocation\x88\x01\x01\x12(\n" +
	"\rdevice_region\x18\x02 \x01(\tH\x01R\fdeviceRegion\x88\x01\x01B\x12\n" +
	"\x10_device_locationB\x10\n" +
	"\x0e_device_region\"\xcd\x01\n" +
	"\x0fMetadataSession\x12\"\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tH\x00R\tsessionId\x88\x01\x01\x12\"\n" +
	"\n" +
	"sponsor_id\x18\x02 \x01(\tH\x01R\tsponsorId\x88\x01\x01\x129\n" +
	"\x16propagation_channel_id\x18\x03 \x01(\tH\x02R\x14propagationChannelId\x88\x01\x01B\r\n" +
	"\v_session_idB\r\n" +
	"\v_sponsor_idB\x19\n" +
	"\x17_propagation_channel_id\"\xec\x05\n" +
	"\x13MetadataServerEntry\x123\n" +
	"\x13server_entry_region\x18\x01 \x01(\tH\x00R\x11serverEntryRegion\x88\x01\x01\x123\n" +
	"\x13server_entry_source\x18\x02 \x01(\tH\x01R\x11serverEntrySource\x88\x01\x01\x12-\n" +
	"\x10server_entry_tag\x18\x03 \x01(\tH\x02R\x0eserverEntryTag\x88\x01\x01\x12U\n" +
	"\x16server_entry_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x03R\x14serverEntryTimestamp\x88\x01\x01\x12A\n" +
	"\x1aserver_packet_manipulation\x18\x05 \x01(\bH\x04R\x18serverPacketManipulation\x88\x01\x01\x12C\n" +
	"\x1bserver_replay_fragmentation\x18\x06 \x01(\bH\x05R\x19serverReplayFragmentation\x88\x01\x01\x12N\n" +
	"!server_replay_packet_manipulation\x18\a \x01(\bH\x06R\x1eserverReplayPacketManipulation\x88\x01\x01\x121\n" +
	"\x12server_entry_valid\x18\b \x01(\bH\aR\x10serverEntryValid\x88\x01\x01B\x16\n" +
	"\x14_server_entry_regionB\x16\n" +
	"\x14_server_entry_sourceB\x13\n" +
	"\x11_server_entry_tagB\x19\n" +
	"\x17_server_entry_timestampB\x1d\n" +
	"\x1b_server_packet_manipulationB\x1e\n" +
	"\x1c_server_replay_fragmentationB$\n" +
	"\"_server_replay_packet_manipulationB\x15\n" +
	"\x13_server_entry_valid\"\xc5N\n" +
	"\x0fMetadataInproxy\x12>\n" +
	"\x19inproxy_broker_client_bpf\x18\x01 \x01(\tH\x00R\x16inproxyBrokerClientBpf\x88\x01\x01\x12B\n" +
	"\x1binproxy_broker_dial_address\x18\x02 \x01(\tH\x01R\x18inproxyBrokerDialAddress\x88\x01\x01\x12@\n" +
	"\x1ainproxy_broker_dns_attempt\x18\x03 \x01(\x03H\x02R\x17inproxyBrokerDnsAttempt\x88\x01\x01\x12D\n" +
	"\x1cinproxy_broker_dns_preferred\x18\x04 \x01(\tH\x03R\x19inproxyBrokerDnsPreferred\x88\x01\x01\x12H\n" +
	"\x1einproxy_broker_dns_preresolved\x18\x05 \x01(\tH\x04R\x1binproxyBrokerDnsPreresolved\x88\x01\x01\x12Q\n" +
	"#inproxy_broker_dns_qname_mismatches\x18\x06 \x01(\x03H\x05R\x1finproxyBrokerDnsQnameMismatches\x88\x01\x01\x12P\n" +
	"#inproxy_broker_dns_qname_must_match\x18\a \x01(\bH\x06R\x1einproxyBrokerDnsQnameMustMatch\x88\x01\x01\x12V\n" +
	"&inproxy_broker_dns_qname_random_casing\x18\b \x01(\bH\aR!inproxyBrokerDnsQnameRandomCasing\x88\x01\x01\x12D\n" +
	"\x1cinproxy_broker_dns_transform\x18\t \x01(\tH\bR\x19inproxyBrokerDnsTransform\x88\x01\x01\x12_\n" +
	"*inproxy_broker_downstream_bytes_fragmented\x18\n" +
	" \x01(\x03H\tR&inproxyBrokerDownstreamBytesFragmented\x88\x01\x01\x12Q\n" +
	"#inproxy_broker_fronting_provider_id\x18\v \x01(\tH\n" +
	"R\x1finproxyBrokerFrontingProviderId\x88\x01\x01\x12@\n" +
	"\x1ainproxy_broker_host_header\x18\f \x01(\tH\vR\x17inproxyBrokerHostHeader\x88\x01\x01\x12F\n" +
	"\x1dinproxy_broker_http_transform\x18\r \x01(\tH\fR\x1ainproxyBrokerHttpTransform\x88\x01\x01\x12/\n" +
	"\x11inproxy_broker_id\x18\x0e \x01(\tH\rR\x0finproxyBrokerId\x88\x01\x01\x12<\n" +
	"\x18inproxy_broker_is_replay\x18\x0f \x01(\bH\x0eR\x15inproxyBrokerIsReplay\x88\x01\x01\x12:\n" +
	"\x17inproxy_broker_is_reuse\x18\x10 \x01(\bH\x0fR\x14inproxyBrokerIsReuse\x88\x01\x01\x12O\n" +
	"\"inproxy_broker_resolved_ip_address\x18\x11 \x01(\tH\x10R\x1einproxyBrokerResolvedIpAddress\x88\x01\x01\x12G\n" +
	"\x1einproxy_broker_sni_server_name\x18\x12 \x01(\tH\x11R\x1ainproxyBrokerSniServerName\x88\x01\x01\x12F\n" +
	"\x1dinproxy_broker_tls_fragmented\x18\x13 \x01(\bH\x12R\x1ainproxyBrokerTlsFragmented\x88\x01\x01\x12@\n" +
	"\x1ainproxy_broker_tls_profile\x18\x14 \x01(\tH\x13R\x17inproxyBrokerTlsProfile\x88\x01\x01\x12@\n" +
	"\x1ainproxy_broker_tls_version\x18\x15 \x01(\tH\x14R\x17inproxyBrokerTlsVersion\x88\x01\x01\x12S\n" +
	"$inproxy_broker_transformed_host_name\x18\x16 \x01(\bH\x15R inproxyBrokerTransformedHostName\x88\x01\x01\x12=\n" +
	"\x18inproxy_broker_transport\x18\x17 \x01(\tH\x16R\x16inproxyBrokerTransport\x88\x01\x01\x12[\n" +
	"(inproxy_broker_upstream_bytes_fragmented\x18\x18 \x01(\x03H\x17R$inproxyBrokerUpstreamBytesFragmented\x88\x01\x01\x12>\n" +
	"\x19inproxy_broker_user_agent\x18\x19 \x01(\tH\x18R\x16inproxyBrokerUserAgent\x88\x01\x01\x12:\n" +
	"\x17inproxy_client_nat_type\x18\x1a \x01(\tH\x19R\x14inproxyClientNatType\x88\x01\x01\x12H\n" +
	"!inproxy_client_port_mapping_types\x18\x1b \x03(\tR\x1dinproxyClientPortMappingTypes\x127\n" +
	"\x15inproxy_connection_id\x18\x1c \x01(\tH\x1aR\x13inproxyConnectionId\x88\x01\x01\x12O\n" +
	"\"inproxy_dial_broker_offer_duration\x18\x1d \x01(\x03H\x1bR\x1einproxyDialBrokerOfferDuration\x88\x01\x01\x12U\n" +
	"%inproxy_dial_failed_attempts_duration\x18\x1e \x01(\x03H\x1cR!inproxyDialFailedAttemptsDuration\x88\x01\x01\x12O\n" +
	"\"inproxy_dial_nat_disovery_duration\x18\x1f \x01(\x03H\x1dR\x1einproxyDialNatDisoveryDuration\x88\x01\x01\x12Y\n" +
	"'inproxy_dial_webrtc_connection_duration\x18  \x01(\x03H\x1eR#inproxyDialWebrtcConnectionDuration\x88\x01\x01\x12^\n" +
	"*inproxy_dial_webrtc_ice_gathering_duration\x18! \x01(\x03H\x1fR%inproxyDialWebrtcIceGatheringDuration\x88\x01\x01\x12R\n" +
	"#inproxy_matched_common_compartments\x18\" \x01(\bH R inproxyMatchedCommonCompartments\x88\x01\x01\x12V\n" +
	"%inproxy_matched_personal_compartments\x18# \x01(\bH!R\"inproxyMatchedPersonalCompartments\x88\x01\x01\x12M\n" +
	"!inproxy_proxy_applied_tactics_tag\x18$ \x01(\tH\"R\x1dinproxyProxyAppliedTacticsTag\x88\x01\x01\x12/\n" +
	"\x11inproxy_proxy_asn\x18% \x01(\tH#R\x0finproxyProxyAsn\x88\x01\x01\x12/\n" +
	"\x11inproxy_proxy_aso\x18& \x01(\tH$R\x0finproxyProxyAso\x88\x01\x01\x121\n" +
	"\x12inproxy_proxy_city\x18' \x01(\tH%R\x10inproxyProxyCity\x88\x01\x01\x12G\n" +
	"\x1einproxy_proxy_client_build_rev\x18( \x01(\tH&R\x1ainproxyProxyClientBuildRev\x88\x01\x01\x12F\n" +
	"\x1dinproxy_proxy_client_platform\x18) \x01(\tH'R\x1ainproxyProxyClientPlatform\x88\x01\x01\x12D\n" +
	"\x1cinproxy_proxy_client_version\x18* \x01(\x03H(R\x19inproxyProxyClientVersion\x88\x01\x01\x12J\n" +
	"\x1finproxy_proxy_connected_clients\x18+ \x01(\x03H)R\x1cinproxyProxyConnectedClients\x88\x01\x01\x12L\n" +
	" inproxy_proxy_connecting_clients\x18, \x01(\x03H*R\x1dinproxyProxyConnectingClients\x88\x01\x01\x12F\n" +
	"\x1dinproxy_proxy_device_location\x18- \x01(\tH+R\x1ainproxyProxyDeviceLocation\x88\x01\x01\x12B\n" +
	"\x1binproxy_proxy_device_region\x18. \x01(\tH,R\x18inproxyProxyDeviceRegion\x88\x01\x01\x129\n" +
	"\x16inproxy_proxy_features\x18/ \x01(\tH-R\x14inproxyProxyFeatures\x88\x01\x01\x12O\n" +
	"\"inproxy_proxy_fronting_provider_id\x180 \x01(\tH.R\x1einproxyProxyFrontingProviderId\x88\x01\x01\x12-\n" +
	"\x10inproxy_proxy_id\x181 \x01(\tH/R\x0einproxyProxyId\x88\x01\x01\x12>\n" +
	"\x19inproxy_proxy_is_priority\x182 \x01(\bH0R\x16inproxyProxyIsPriority\x88\x01\x01\x12/\n" +
	"\x11inproxy_proxy_isp\x183 \x01(\tH1R\x0finproxyProxyIsp\x88\x01\x01\x12g\n" +
	"/inproxy_proxy_limit_downstream_bytes_per_second\x184 \x01(\x03H2R)inproxyProxyLimitDownstreamBytesPerSecond\x88\x01\x01\x12c\n" +
	"-inproxy_proxy_limit_upstream_bytes_per_second\x185 \x01(\x03H3R'inproxyProxyLimitUpstreamBytesPerSecond\x88\x01\x01\x12>\n" +
	"\x19inproxy_proxy_max_clients\x186 \x01(\x03H4R\x16inproxyProxyMaxClients\x88\x01\x01\x128\n" +
	"\x16inproxy_proxy_nat_type\x187 \x01(\tH5R\x13inproxyProxyNatType\x88\x01\x01\x12@\n" +
	"\x1ainproxy_proxy_network_type\x188 \x01(\tH6R\x17inproxyProxyNetworkType\x88\x01\x01\x12e\n" +
	".inproxy_proxy_peak_downstream_bytes_per_second\x189 \x01(\x03H7R(inproxyProxyPeakDownstreamBytesPerSecond\x88\x01\x01\x12a\n" +
	",inproxy_proxy_peak_upstream_bytes_per_second\x18: \x01(\x03H8R&inproxyProxyPeakUpstreamBytesPerSecond\x88\x01\x01\x12F\n" +
	" inproxy_proxy_port_mapping_types\x18; \x03(\tR\x1cinproxyProxyPortMappingTypes\x12S\n" +
	"$inproxy_proxy_propagation_channel_id\x18< \x01(\tH9R inproxyProxyPropagationChannelId\x88\x01\x01\x12H\n" +
	"\x1einproxy_proxy_protocol_version\x18= \x01(\x03H:R\x1binproxyProxyProtocolVersion\x88\x01\x01\x125\n" +
	"\x14inproxy_proxy_region\x18> \x01(\tH;R\x12inproxyProxyRegion\x88\x01\x01\x12<\n" +
	"\x18inproxy_proxy_session_id\x18? \x01(\tH<R\x15inproxyProxySessionId\x88\x01\x01\x12<\n" +
	"\x18inproxy_proxy_sponsor_id\x18@ \x01(\tH=R\x15inproxyProxySponsorId\x88\x01\x01\x12K\n" +
	" inproxy_proxy_stored_tactics_tag\x18A \x01(\tH>R\x1cinproxyProxyStoredTacticsTag\x88\x01\x01\x12A\n" +
	"\x1dinproxy_proxy_client_features\x18B \x03(\tR\x1ainproxyProxyClientFeatures\x12W\n" +
	"&inproxy_webrtc_decoy_messages_received\x18C \x01(\x03H?R\"inproxyWebrtcDecoyMessagesReceived\x88\x01\x01\x12O\n" +
	"\"inproxy_webrtc_decoy_messages_sent\x18D \x01(\x03H@R\x1einproxyWebrtcDecoyMessagesSent\x88\x01\x01\x12@\n" +
	"\x1ainproxy_webrtc_dns_attempt\x18E \x01(\x03HAR\x17inproxyWebrtcDnsAttempt\x88\x01\x01\x12D\n" +
	"\x1cinproxy_webrtc_dns_preferred\x18F \x01(\tHBR\x19inproxyWebrtcDnsPreferred\x88\x01\x01\x12H\n" +
	"\x1einproxy_webrtc_dns_preresolved\x18G \x01(\tHCR\x1binproxyWebrtcDnsPreresolved\x88\x01\x01\x12Q\n" +
	"#inproxy_webrtc_dns_qname_mismatches\x18H \x01(\x03HDR\x1finproxyWebrtcDnsQnameMismatches\x88\x01\x01\x12P\n" +
	"#inproxy_webrtc_dns_qname_must_match\x18I \x01(\bHER\x1einproxyWebrtcDnsQnameMustMatch\x88\x01\x01\x12V\n" +
	"&inproxy_webrtc_dns_qname_random_casing\x18J \x01(\bHFR!inproxyWebrtcDnsQnameRandomCasing\x88\x01\x01\x12D\n" +
	"\x1cinproxy_webrtc_dns_transform\x18K \x01(\tHGR\x19inproxyWebrtcDnsTransform\x88\x01\x01\x12]\n" +
	"*inproxy_webrtc_local_ice_candidate_is_IPv6\x18L \x01(\bHHR$inproxyWebrtcLocalIceCandidateIsIPv6\x88\x01\x01\x12g\n" +
	"/inproxy_webrtc_local_ice_candidate_is_initiator\x18M \x01(\bHIR)inproxyWebrtcLocalIceCandidateIsInitiator\x88\x01\x01\x12X\n" +
	"'inproxy_webrtc_local_ice_candidate_port\x18N \x01(\x03HJR\"inproxyWebrtcLocalIceCandidatePort\x88\x01\x01\x12X\n" +
	"'inproxy_webrtc_local_ice_candidate_type\x18O \x01(\tHKR\"inproxyWebrtcLocalIceCandidateType\x88\x01\x01\x12Y\n" +
	"'inproxy_webrtc_padded_messages_received\x18P \x01(\x03HLR#inproxyWebrtcPaddedMessagesReceived\x88\x01\x01\x12Q\n" +
	"#inproxy_webrtc_padded_messages_sent\x18Q \x01(\x03HMR\x1finproxyWebrtcPaddedMessagesSent\x88\x01\x01\x12F\n" +
	"\x1dinproxy_webrtc_randomize_dtls\x18R \x01(\bHNR\x1ainproxyWebrtcRandomizeDtls\x88\x01\x01\x12_\n" +
	"+inproxy_webrtc_remote_ice_candidate_is_IPv6\x18S \x01(\bHOR%inproxyWebrtcRemoteIceCandidateIsIPv6\x88\x01\x01\x12Z\n" +
	"(inproxy_webrtc_remote_ice_candidate_port\x18T \x01(\x03HPR#inproxyWebrtcRemoteIceCandidatePort\x88\x01\x01\x12Z\n" +
	"(inproxy_webrtc_remote_ice_candidate_type\x18U \x01(\tHQR#inproxyWebrtcRemoteIceCandidateType\x88\x01\x01\x12@\n" +
	"\x1ainproxy_webrtc_stun_server\x18V \x01(\tHRR\x17inproxyWebrtcStunServer\x88\x01\x01\x12O\n" +
	"\"inproxy_webrtc_stun_server_RFC5780\x18W \x01(\tHSR\x1einproxyWebrtcStunServerRFC5780\x88\x01\x01\x12t\n" +
	"6inproxy_webrtc_stun_server_RFC5780_resolved_ip_address\x18X \x01(\tHTR/inproxyWebrtcStunServerRFC5780ResolvedIpAddress\x88\x01\x01\x12e\n" +
	".inproxy_webrtc_stun_server_resolved_ip_address\x18Y \x01(\tHUR(inproxyWebrtcStunServerResolvedIpAddress\x88\x01\x01\x12K\n" +
	" inproxy_webrtc_use_media_streams\x18Z \x01(\bHVR\x1cinproxyWebrtcUseMediaStreams\x88\x01\x01B\x1c\n" +
	"\x1a_inproxy_broker_client_bpfB\x1e\n" +
	"\x1c_inproxy_broker_dial_addressB\x1d\n" +
	"\x1b_inproxy_broker_dns_attemptB\x1f\n" +
	"\x1d_inproxy_broker_dns_preferredB!\n" +
	"\x1f_inproxy_broker_dns_preresolvedB&\n" +
	"$_inproxy_broker_dns_qname_mismatchesB&\n" +
	"$_inproxy_broker_dns_qname_must_matchB)\n" +
	"'_inproxy_broker_dns_qname_random_casingB\x1f\n" +
	"\x1d_inproxy_broker_dns_transformB-\n" +
	"+_inproxy_broker_downstream_bytes_fragmentedB&\n" +
	"$_inproxy_broker_fronting_provider_idB\x1d\n" +
	"\x1b_inproxy_broker_host_headerB \n" +
	"\x1e_inproxy_broker_http_transformB\x14\n" +
	"\x12_inproxy_broker_idB\x1b\n" +
	"\x19_inproxy_broker_is_replayB\x1a\n" +
	"\x18_inproxy_broker_is_reuseB%\n" +
	"#_inproxy_broker_resolved_ip_addressB!\n" +
	"\x1f_inproxy_broker_sni_server_nameB \n" +
	"\x1e_inproxy_broker_tls_fragmentedB\x1d\n" +
	"\x1b_inproxy_broker_tls_profileB\x1d\n" +
	"\x1b_inproxy_broker_tls_versionB'\n" +
	"%_inproxy_broker_transformed_host_nameB\x1b\n" +
	"\x19_inproxy_broker_transportB+\n" +
	")_inproxy_broker_upstream_bytes_fragmentedB\x1c\n" +
	"\x1a_inproxy_broker_user_agentB\x1a\n" +
	"\x18_inproxy_client_nat_typeB\x18\n" +
	"\x16_inproxy_connection_idB%\n" +
	"#_inproxy_dial_broker_offer_durationB(\n" +
	"&_inproxy_dial_failed_attempts_durationB%\n" +
	"#_inproxy_dial_nat_disovery_durationB*\n" +
	"(_inproxy_dial_webrtc_connection_durationB-\n" +
	"+_inproxy_dial_webrtc_ice_gathering_durationB&\n" +
	"$_inproxy_matched_common_compartmentsB(\n" +
	"&_inproxy_matched_personal_compartmentsB$\n" +
	"\"_inproxy_proxy_applied_tactics_tagB\x14\n" +
	"\x12_inproxy_proxy_asnB\x14\n" +
	"\x12_inproxy_proxy_asoB\x15\n" +
	"\x13_inproxy_proxy_cityB!\n" +
	"\x1f_inproxy_proxy_client_build_revB \n" +
	"\x1e_inproxy_proxy_client_platformB\x1f\n" +
	"\x1d_inproxy_proxy_client_versionB\"\n" +
	" _inproxy_proxy_connected_clientsB#\n" +
	"!_inproxy_proxy_connecting_clientsB \n" +
	"\x1e_inproxy_proxy_device_locationB\x1e\n" +
	"\x1c_inproxy_proxy_device_regionB\x19\n" +
	"\x17_inproxy_proxy_featuresB%\n" +
	"#_inproxy_proxy_fronting_provider_idB\x13\n" +
	"\x11_inproxy_proxy_idB\x1c\n" +
	"\x1a_inproxy_proxy_is_priorityB\x14\n" +
	"\x12_inproxy_proxy_ispB2\n" +
	"0_inproxy_proxy_limit_downstream_bytes_per_secondB0\n" +
	"._inproxy_proxy_limit_upstream_bytes_per_secondB\x1c\n" +
	"\x1a_inproxy_proxy_max_clientsB\x19\n" +
	"\x17_inproxy_proxy_nat_typeB\x1d\n" +
	"\x1b_inproxy_proxy_network_typeB1\n" +
	"/_inproxy_proxy_peak_downstream_bytes_per_secondB/\n" +
	"-_inproxy_proxy_peak_upstream_bytes_per_secondB'\n" +
	"%_inproxy_proxy_propagation_channel_idB!\n" +
	"\x1f_inproxy_proxy_protocol_versionB\x17\n" +
	"\x15_inproxy_proxy_regionB\x1b\n" +
	"\x19_inproxy_proxy_session_idB\x1b\n" +
	"\x19_inproxy_proxy_sponsor_idB#\n" +
	"!_inproxy_proxy_stored_tactics_tagB)\n" +
	"'_inproxy_webrtc_decoy_messages_receivedB%\n" +
	"#_inproxy_webrtc_decoy_messages_sentB\x1d\n" +
	"\x1b_inproxy_webrtc_dns_attemptB\x1f\n" +
	"\x1d_inproxy_webrtc_dns_preferredB!\n" +
	"\x1f_inproxy_webrtc_dns_preresolvedB&\n" +
	"$_inproxy_webrtc_dns_qname_mismatchesB&\n" +
	"$_inproxy_webrtc_dns_qname_must_matchB)\n" +
	"'_inproxy_webrtc_dns_qname_random_casingB\x1f\n" +
	"\x1d_inproxy_webrtc_dns_transformB-\n" +
	"+_inproxy_webrtc_local_ice_candidate_is_IPv6B2\n" +
	"0_inproxy_webrtc_local_ice_candidate_is_initiatorB*\n" +
	"(_inproxy_webrtc_local_ice_candidate_portB*\n" +
	"(_inproxy_webrtc_local_ice_candidate_typeB*\n" +
	"(_inproxy_webrtc_padded_messages_receivedB&\n" +
	"$_inproxy_webrtc_padded_messages_sentB \n" +
	"\x1e_inproxy_webrtc_randomize_dtlsB.\n" +
	",_inproxy_webrtc_remote_ice_candidate_is_IPv6B+\n" +
	")_inproxy_webrtc_remote_ice_candidate_portB+\n" +
	")_inproxy_webrtc_remote_ice_candidate_typeB\x1d\n" +
	"\x1b_inproxy_webrtc_stun_serverB%\n" +
	"#_inproxy_webrtc_stun_server_RFC5780B9\n" +
	"7_inproxy_webrtc_stun_server_RFC5780_resolved_ip_addressB1\n" +
	"/_inproxy_webrtc_stun_server_resolved_ip_addressB#\n" +
	"!_inproxy_webrtc_use_media_streams\"\xab\x04\n" +
	"\x0fMetadataConjure\x12*\n" +
	"\x0econjure_cached\x18\x01 \x01(\bH\x00R\rconjureCached\x88\x01\x01\x12(\n" +
	"\rconjure_delay\x18\x02 \x01(\x03H\x01R\fconjureDelay\x88\x01\x01\x125\n" +
	"\x14conjure_empty_packet\x18\x03 \x01(\bH\x02R\x12conjureEmptyPacket\x88\x01\x01\x12,\n" +
	"\x0fconjure_network\x18\x04 \x01(\tH\x03R\x0econjureNetwork\x88\x01\x01\x123\n" +
	"\x13conjure_port_number\x18\x05 \x01(\x03H\x04R\x11conjurePortNumber\x88\x01\x01\x12*\n" +
	"\x0econjure_prefix\x18\x06 \x01(\tH\x05R\rconjurePrefix\x88\x01\x01\x12&\n" +
	"\fconjure_stun\x18\a \x01(\tH\x06R\vconjureStun\x88\x01\x01\x120\n" +
	"\x11conjure_transport\x18\b \x01(\tH\aR\x10conjureTransport\x88\x01\x01B\x11\n" +
	"\x0f_conjure_cachedB\x10\n" +
	"\x0e_conjure_delayB\x17\n" +
	"\x15_conjure_empty_packetB\x12\n" +
	"\x10_conjure_networkB\x16\n" +
	"\x14_conjure_port_numberB\x11\n" +
	"\x0f_conjure_prefixB\x0f\n" +
	"\r_conjure_stunB\x14\n" +
	"\x12_conjure_transport\"\xe9\v\n" +
	"\fMetadataMeek\x12O\n" +
	"\"meek_cached_response_miss_position\x18\x01 \x01(\x03H\x00R\x1emeekCachedResponseMissPosition\x88\x01\x01\x123\n" +
	"\x13meek_client_retries\x18\x02 \x01(\x03H\x01R\x11meekClientRetries\x88\x01\x01\x12-\n" +
	"\x10meek_cookie_size\x18\x03 \x01(\x03H\x02R\x0emeekCookieSize\x88\x01\x01\x12-\n" +
	"\x10meek_dial_domain\x18\x04 \x01(\tH\x03R\x0emeekDialDomain\x88\x01\x01\x124\n" +
	"\x14meek_dial_ip_address\x18\x05 \x01(\tH\x04R\x11meekDialIpAddress\x88\x01\x01\x12-\n" +
	"\x10meek_host_header\x18\x06 \x01(\tH\x05R\x0emeekHostHeader\x88\x01\x01\x121\n" +
	"\x12meek_limit_request\x18\a \x01(\x03H\x06R\x10meekLimitRequest\x88\x01\x01\x12N\n" +
	"\"meek_peak_cached_response_hit_size\x18\b \x01(\x03H\aR\x1dmeekPeakCachedResponseHitSize\x88\x01\x01\x12G\n" +
	"\x1emeek_peak_cached_response_size\x18\t \x01(\x03H\bR\x1ameekPeakCachedResponseSize\x88\x01\x01\x12:\n" +
	"\x17meek_peak_response_size\x18\n" +
	" \x01(\x03H\tR\x14meekPeakResponseSize\x88\x01\x01\x12;\n" +
	"\x17meek_redial_probability\x18\v \x01(\x03H\n" +
	"R\x15meekRedialProbability\x88\x01\x01\x12<\n" +
	"\x18meek_resolved_ip_address\x18\f \x01(\tH\vR\x15meekResolvedIpAddress\x88\x01\x01\x124\n" +
	"\x14meek_sni_server_name\x18\r \x01(\tH\fR\x11meekSniServerName\x88\x01\x01\x12-\n" +
	"\x10meek_tls_padding\x18\x0e \x01(\x03H\rR\x0emeekTlsPadding\x88\x01\x01\x12@\n" +
	"\x1ameek_transformed_host_name\x18\x0f \x01(\bH\x0eR\x17meekTransformedHostName\x88\x01\x01\x12L\n" +
	" meek_underlying_connection_count\x18\x10 \x01(\x03H\x0fR\x1dmeekUnderlyingConnectionCount\x88\x01\x01\x12<\n" +
	"\x18meek_server_http_version\x18\x11 \x01(\tH\x10R\x15meekServerHttpVersion\x88\x01\x01B%\n" +
	"#_meek_cached_response_miss_positionB\x16\n" +
	"\x14_meek_client_retriesB\x13\n" +
	"\x11_meek_cookie_sizeB\x13\n" +
	"\x11_meek_dial_domainB\x17\n" +
	"\x15_meek_dial_ip_addressB\x13\n" +
	"\x11_meek_host_headerB\x15\n" +
	"\x13_meek_limit_requestB%\n" +
	"#_meek_peak_cached_response_hit_sizeB!\n" +
	"\x1f_meek_peak_cached_response_sizeB\x1a\n" +
	"\x18_meek_peak_response_sizeB\x1a\n" +
	"\x18_meek_redial_probabilityB\x1b\n" +
	"\x19_meek_resolved_ip_addressB\x17\n" +
	"\x15_meek_sni_server_nameB\x13\n" +
	"\x11_meek_tls_paddingB\x1d\n" +
	"\x1b_meek_transformed_host_nameB#\n" +
	"!_meek_underlying_connection_countB\x1b\n" +
	"\x19_meek_server_http_version\"\xaf\x04\n" +
	"\fMetadataQuic\x12+\n" +
	"\x0fquic_dial_early\x18\x01 \x01(\bH\x00R\rquicDialEarly\x88\x01\x01\x126\n" +
	"\x15quic_dial_sni_address\x18\x02 \x01(\tH\x01R\x12quicDialSniAddress\x88\x01\x01\x12+\n" +
	"\x0fquic_did_resume\x18\x03 \x01(\bH\x02R\rquicDidResume\x88\x01\x01\x12V\n" +
	"&quic_disable_client_path_mtu_discovery\x18\x04 \x01(\bH\x03R!quicDisableClientPathMtuDiscovery\x88\x01\x01\x123\n" +
	"\x13quic_obfuscated_psk\x18\x05 \x01(\bH\x04R\x11quicObfuscatedPsk\x88\x01\x01\x12-\n" +
	"\x10quic_sent_ticket\x18\x06 \x01(\bH\x05R\x0equicSentTicket\x88\x01\x01\x12&\n" +
	"\fquic_version\x18\a \x01(\tH\x06R\vquicVersion\x88\x01\x01B\x12\n" +
	"\x10_quic_dial_earlyB\x18\n" +
	"\x16_quic_dial_sni_addressB\x12\n" +
	"\x10_quic_did_resumeB)\n" +
	"'_quic_disable_client_path_mtu_discoveryB\x16\n" +
	"\x14_quic_obfuscated_pskB\x13\n" +
	"\x11_quic_sent_ticketB\x0f\n" +
	"\r_quic_version\"\xb3\x04\n" +
	"\vMetadataTLS\x12)\n" +
	"\x0etls_did_resume\x18\x01 \x01(\bH\x00R\ftlsDidResume\x88\x01\x01\x12*\n" +
	"\x0etls_fragmented\x18\x02 \x01(\bH\x01R\rtlsFragmented\x88\x01\x01\x12;\n" +
	"\x18tls_ossh_sni_server_name\x18\x03 \x01(\tH\x02R\x14tlsOsshSniServerName\x88\x01\x01\x12G\n" +
	"\x1etls_ossh_transformed_host_name\x18\x04 \x01(\bH\x03R\x1atlsOsshTransformedHostName\x88\x01\x01\x12$\n" +
	"\vtls_padding\x18\x05 \x01(\x03H\x04R\n" +
	"tlsPadding\x88\x01\x01\x12$\n" +
	"\vtls_profile\x18\x06 \x01(\tH\x05R\n" +
	"tlsProfile\x88\x01\x01\x12+\n" +
	"\x0ftls_sent_ticket\x18\a \x01(\bH\x06R\rtlsSentTicket\x88\x01\x01\x12$\n" +
	"\vtls_version\x18\b \x01(\tH\aR\n" +
	"tlsVersion\x88\x01\x01B\x11\n" +
	"\x0f_tls_did_resumeB\x11\n" +
	"\x0f_tls_fragmentedB\x1b\n" +
	"\x19_tls_ossh_sni_server_nameB!\n" +
	"\x1f_tls_ossh_transformed_host_nameB\x0e\n" +
	"\f_tls_paddingB\x0e\n" +
	"\f_tls_profileB\x12\n" +
	"\x10_tls_sent_ticketB\x0e\n" +
	"\f_tls_version\"`\n" +
	"\x13MetadataShadowsocks\x122\n" +
	"\x12shadowsocks_prefix\x18\x01 \x01(\tH\x00R\x11shadowsocksPrefix\x88\x01\x01B\x15\n" +
	"\x13_shadowsocks_prefixBHZFgithub.com/Psiphon-Labs/psiphon-tunnel-core/psiphon/server/pb/psiphondb\x06proto3"

var (
	file_ca_psiphon_psiphond_metadata_proto_rawDescOnce sync.Once
	file_ca_psiphon_psiphond_metadata_proto_rawDescData []byte
)

func file_ca_psiphon_psiphond_metadata_proto_rawDescGZIP() []byte {
	file_ca_psiphon_psiphond_metadata_proto_rawDescOnce.Do(func() {
		file_ca_psiphon_psiphond_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ca_psiphon_psiphond_metadata_proto_rawDesc), len(file_ca_psiphon_psiphond_metadata_proto_rawDesc)))
	})
	return file_ca_psiphon_psiphond_metadata_proto_rawDescData
}

var file_ca_psiphon_psiphond_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ca_psiphon_psiphond_metadata_proto_goTypes = []any{
	(*MetadataClient)(nil),        // 0: ca.psiphon.psiphond.MetadataClient
	(*MetadataDevice)(nil),        // 1: ca.psiphon.psiphond.MetadataDevice
	(*MetadataSession)(nil),       // 2: ca.psiphon.psiphond.MetadataSession
	(*MetadataServerEntry)(nil),   // 3: ca.psiphon.psiphond.MetadataServerEntry
	(*MetadataInproxy)(nil),       // 4: ca.psiphon.psiphond.MetadataInproxy
	(*MetadataConjure)(nil),       // 5: ca.psiphon.psiphond.MetadataConjure
	(*MetadataMeek)(nil),          // 6: ca.psiphon.psiphond.MetadataMeek
	(*MetadataQuic)(nil),          // 7: ca.psiphon.psiphond.MetadataQuic
	(*MetadataTLS)(nil),           // 8: ca.psiphon.psiphond.MetadataTLS
	(*MetadataShadowsocks)(nil),   // 9: ca.psiphon.psiphond.MetadataShadowsocks
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_ca_psiphon_psiphond_metadata_proto_depIdxs = []int32{
	10, // 0: ca.psiphon.psiphond.MetadataServerEntry.server_entry_timestamp:type_name -> google.protobuf.Timestamp
	1,  // [1:1] is the sub-list for method output_type
	1,  // [1:1] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_ca_psiphon_psiphond_metadata_proto_init() }
func file_ca_psiphon_psiphond_metadata_proto_init() {
	if File_ca_psiphon_psiphond_metadata_proto != nil {
		return
	}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[0].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[1].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[2].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[3].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[4].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[5].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[6].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[7].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[8].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_metadata_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ca_psiphon_psiphond_metadata_proto_rawDesc), len(file_ca_psiphon_psiphond_metadata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ca_psiphon_psiphond_metadata_proto_goTypes,
		DependencyIndexes: file_ca_psiphon_psiphond_metadata_proto_depIdxs,
		MessageInfos:      file_ca_psiphon_psiphond_metadata_proto_msgTypes,
	}.Build()
	File_ca_psiphon_psiphond_metadata_proto = out.File
	file_ca_psiphon_psiphond_metadata_proto_goTypes = nil
	file_ca_psiphon_psiphond_metadata_proto_depIdxs = nil
}
