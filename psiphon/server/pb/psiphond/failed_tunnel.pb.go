// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: ca.psiphon.psiphond/failed_tunnel.proto

package psiphond

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FailedTunnel struct {
	state                               protoimpl.MessageState `protogen:"open.v1"`
	BaseParams                          *BaseParams            `protobuf:"bytes,1,opt,name=base_params,json=baseParams,proto3,oneof" json:"base_params,omitempty"`
	DialParams                          *DialParams            `protobuf:"bytes,2,opt,name=dial_params,json=dialParams,proto3,oneof" json:"dial_params,omitempty"`
	InproxyDialParams                   *InproxyDialParams     `protobuf:"bytes,3,opt,name=inproxy_dial_params,json=inproxyDialParams,proto3,oneof" json:"inproxy_dial_params,omitempty"`
	BytesDown                           *int64                 `protobuf:"varint,100,opt,name=bytes_down,json=bytesDown,proto3,oneof" json:"bytes_down,omitempty"`
	BytesUp                             *int64                 `protobuf:"varint,101,opt,name=bytes_up,json=bytesUp,proto3,oneof" json:"bytes_up,omitempty"`
	ClientFailedTimestamp               *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=client_failed_timestamp,json=clientFailedTimestamp,proto3,oneof" json:"client_failed_timestamp,omitempty"`
	LivenessTestDownstreamBytes         *int64                 `protobuf:"varint,103,opt,name=liveness_test_downstream_bytes,json=livenessTestDownstreamBytes,proto3,oneof" json:"liveness_test_downstream_bytes,omitempty"`
	LivenessTestReceivedDownstreamBytes *int64                 `protobuf:"varint,104,opt,name=liveness_test_received_downstream_bytes,json=livenessTestReceivedDownstreamBytes,proto3,oneof" json:"liveness_test_received_downstream_bytes,omitempty"`
	LivenessTestSentUpstreamBytes       *int64                 `protobuf:"varint,105,opt,name=liveness_test_sent_upstream_bytes,json=livenessTestSentUpstreamBytes,proto3,oneof" json:"liveness_test_sent_upstream_bytes,omitempty"`
	LivenessTestUpstreamBytes           *int64                 `protobuf:"varint,106,opt,name=liveness_test_upstream_bytes,json=livenessTestUpstreamBytes,proto3,oneof" json:"liveness_test_upstream_bytes,omitempty"`
	RecordProbability                   *float64               `protobuf:"fixed64,107,opt,name=record_probability,json=recordProbability,proto3,oneof" json:"record_probability,omitempty"`
	TunnelError                         *string                `protobuf:"bytes,108,opt,name=tunnel_error,json=tunnelError,proto3,oneof" json:"tunnel_error,omitempty"` //LowCardinality
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *FailedTunnel) Reset() {
	*x = FailedTunnel{}
	mi := &file_ca_psiphon_psiphond_failed_tunnel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailedTunnel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailedTunnel) ProtoMessage() {}

func (x *FailedTunnel) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_failed_tunnel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailedTunnel.ProtoReflect.Descriptor instead.
func (*FailedTunnel) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_failed_tunnel_proto_rawDescGZIP(), []int{0}
}

func (x *FailedTunnel) GetBaseParams() *BaseParams {
	if x != nil {
		return x.BaseParams
	}
	return nil
}

func (x *FailedTunnel) GetDialParams() *DialParams {
	if x != nil {
		return x.DialParams
	}
	return nil
}

func (x *FailedTunnel) GetInproxyDialParams() *InproxyDialParams {
	if x != nil {
		return x.InproxyDialParams
	}
	return nil
}

func (x *FailedTunnel) GetBytesDown() int64 {
	if x != nil && x.BytesDown != nil {
		return *x.BytesDown
	}
	return 0
}

func (x *FailedTunnel) GetBytesUp() int64 {
	if x != nil && x.BytesUp != nil {
		return *x.BytesUp
	}
	return 0
}

func (x *FailedTunnel) GetClientFailedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ClientFailedTimestamp
	}
	return nil
}

func (x *FailedTunnel) GetLivenessTestDownstreamBytes() int64 {
	if x != nil && x.LivenessTestDownstreamBytes != nil {
		return *x.LivenessTestDownstreamBytes
	}
	return 0
}

func (x *FailedTunnel) GetLivenessTestReceivedDownstreamBytes() int64 {
	if x != nil && x.LivenessTestReceivedDownstreamBytes != nil {
		return *x.LivenessTestReceivedDownstreamBytes
	}
	return 0
}

func (x *FailedTunnel) GetLivenessTestSentUpstreamBytes() int64 {
	if x != nil && x.LivenessTestSentUpstreamBytes != nil {
		return *x.LivenessTestSentUpstreamBytes
	}
	return 0
}

func (x *FailedTunnel) GetLivenessTestUpstreamBytes() int64 {
	if x != nil && x.LivenessTestUpstreamBytes != nil {
		return *x.LivenessTestUpstreamBytes
	}
	return 0
}

func (x *FailedTunnel) GetRecordProbability() float64 {
	if x != nil && x.RecordProbability != nil {
		return *x.RecordProbability
	}
	return 0
}

func (x *FailedTunnel) GetTunnelError() string {
	if x != nil && x.TunnelError != nil {
		return *x.TunnelError
	}
	return ""
}

var File_ca_psiphon_psiphond_failed_tunnel_proto protoreflect.FileDescriptor

const file_ca_psiphon_psiphond_failed_tunnel_proto_rawDesc = "" +
	"\n" +
	"'ca.psiphon.psiphond/failed_tunnel.proto\x12\x13ca.psiphon.psiphond\x1a%ca.psiphon.psiphond/base_params.proto\x1a%ca.psiphon.psiphond/dial_params.proto\x1a-ca.psiphon.psiphond/inproxy_dial_params.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xda\b\n" +
	"\fFailedTunnel\x12E\n" +
	"\vbase_params\x18\x01 \x01(\v2\x1f.ca.psiphon.psiphond.BaseParamsH\x00R\n" +
	"baseParams\x88\x01\x01\x12E\n" +
	"\vdial_params\x18\x02 \x01(\v2\x1f.ca.psiphon.psiphond.DialParamsH\x01R\n" +
	"dialParams\x88\x01\x01\x12[\n" +
	"\x13inproxy_dial_params\x18\x03 \x01(\v2&.ca.psiphon.psiphond.InproxyDialParamsH\x02R\x11inproxyDialParams\x88\x01\x01\x12\"\n" +
	"\n" +
	"bytes_down\x18d \x01(\x03H\x03R\tbytesDown\x88\x01\x01\x12\x1e\n" +
	"\bbytes_up\x18e \x01(\x03H\x04R\abytesUp\x88\x01\x01\x12W\n" +
	"\x17client_failed_timestamp\x18f \x01(\v2\x1a.google.protobuf.TimestampH\x05R\x15clientFailedTimestamp\x88\x01\x01\x12H\n" +
	"\x1eliveness_test_downstream_bytes\x18g \x01(\x03H\x06R\x1blivenessTestDownstreamBytes\x88\x01\x01\x12Y\n" +
	"'liveness_test_received_downstream_bytes\x18h \x01(\x03H\aR#livenessTestReceivedDownstreamBytes\x88\x01\x01\x12M\n" +
	"!liveness_test_sent_upstream_bytes\x18i \x01(\x03H\bR\x1dlivenessTestSentUpstreamBytes\x88\x01\x01\x12D\n" +
	"\x1cliveness_test_upstream_bytes\x18j \x01(\x03H\tR\x19livenessTestUpstreamBytes\x88\x01\x01\x122\n" +
	"\x12record_probability\x18k \x01(\x01H\n" +
	"R\x11recordProbability\x88\x01\x01\x12&\n" +
	"\ftunnel_error\x18l \x01(\tH\vR\vtunnelError\x88\x01\x01B\x0e\n" +
	"\f_base_paramsB\x0e\n" +
	"\f_dial_paramsB\x16\n" +
	"\x14_inproxy_dial_paramsB\r\n" +
	"\v_bytes_downB\v\n" +
	"\t_bytes_upB\x1a\n" +
	"\x18_client_failed_timestampB!\n" +
	"\x1f_liveness_test_downstream_bytesB*\n" +
	"(_liveness_test_received_downstream_bytesB$\n" +
	"\"_liveness_test_sent_upstream_bytesB\x1f\n" +
	"\x1d_liveness_test_upstream_bytesB\x15\n" +
	"\x13_record_probabilityB\x0f\n" +
	"\r_tunnel_errorBHZFgithub.com/Psiphon-Labs/psiphon-tunnel-core/psiphon/server/pb/psiphondb\x06proto3"

var (
	file_ca_psiphon_psiphond_failed_tunnel_proto_rawDescOnce sync.Once
	file_ca_psiphon_psiphond_failed_tunnel_proto_rawDescData []byte
)

func file_ca_psiphon_psiphond_failed_tunnel_proto_rawDescGZIP() []byte {
	file_ca_psiphon_psiphond_failed_tunnel_proto_rawDescOnce.Do(func() {
		file_ca_psiphon_psiphond_failed_tunnel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ca_psiphon_psiphond_failed_tunnel_proto_rawDesc), len(file_ca_psiphon_psiphond_failed_tunnel_proto_rawDesc)))
	})
	return file_ca_psiphon_psiphond_failed_tunnel_proto_rawDescData
}

var file_ca_psiphon_psiphond_failed_tunnel_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ca_psiphon_psiphond_failed_tunnel_proto_goTypes = []any{
	(*FailedTunnel)(nil),          // 0: ca.psiphon.psiphond.FailedTunnel
	(*BaseParams)(nil),            // 1: ca.psiphon.psiphond.BaseParams
	(*DialParams)(nil),            // 2: ca.psiphon.psiphond.DialParams
	(*InproxyDialParams)(nil),     // 3: ca.psiphon.psiphond.InproxyDialParams
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_ca_psiphon_psiphond_failed_tunnel_proto_depIdxs = []int32{
	1, // 0: ca.psiphon.psiphond.FailedTunnel.base_params:type_name -> ca.psiphon.psiphond.BaseParams
	2, // 1: ca.psiphon.psiphond.FailedTunnel.dial_params:type_name -> ca.psiphon.psiphond.DialParams
	3, // 2: ca.psiphon.psiphond.FailedTunnel.inproxy_dial_params:type_name -> ca.psiphon.psiphond.InproxyDialParams
	4, // 3: ca.psiphon.psiphond.FailedTunnel.client_failed_timestamp:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ca_psiphon_psiphond_failed_tunnel_proto_init() }
func file_ca_psiphon_psiphond_failed_tunnel_proto_init() {
	if File_ca_psiphon_psiphond_failed_tunnel_proto != nil {
		return
	}
	file_ca_psiphon_psiphond_base_params_proto_init()
	file_ca_psiphon_psiphond_dial_params_proto_init()
	file_ca_psiphon_psiphond_inproxy_dial_params_proto_init()
	file_ca_psiphon_psiphond_failed_tunnel_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ca_psiphon_psiphond_failed_tunnel_proto_rawDesc), len(file_ca_psiphon_psiphond_failed_tunnel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ca_psiphon_psiphond_failed_tunnel_proto_goTypes,
		DependencyIndexes: file_ca_psiphon_psiphond_failed_tunnel_proto_depIdxs,
		MessageInfos:      file_ca_psiphon_psiphond_failed_tunnel_proto_msgTypes,
	}.Build()
	File_ca_psiphon_psiphond_failed_tunnel_proto = out.File
	file_ca_psiphon_psiphond_failed_tunnel_proto_goTypes = nil
	file_ca_psiphon_psiphond_failed_tunnel_proto_depIdxs = nil
}
