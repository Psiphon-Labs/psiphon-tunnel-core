// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: ca.psiphon.psiphond/tactics.proto

package psiphond

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tactics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BaseParams       *BaseParams            `protobuf:"bytes,1,opt,name=base_params,json=baseParams,proto3,oneof" json:"base_params,omitempty"`
	DialParams       *DialParams            `protobuf:"bytes,2,opt,name=dial_params,json=dialParams,proto3,oneof" json:"dial_params,omitempty"`
	IsTacticsRequest *bool                  `protobuf:"varint,100,opt,name=is_tactics_request,json=isTacticsRequest,proto3,oneof" json:"is_tactics_request,omitempty"`
	NewTacticsTag    *string                `protobuf:"bytes,101,opt,name=new_tactics_tag,json=newTacticsTag,proto3,oneof" json:"new_tactics_tag,omitempty"`
	StoredTacticsTag *string                `protobuf:"bytes,102,opt,name=stored_tactics_tag,json=storedTacticsTag,proto3,oneof" json:"stored_tactics_tag,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Tactics) Reset() {
	*x = Tactics{}
	mi := &file_ca_psiphon_psiphond_tactics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tactics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tactics) ProtoMessage() {}

func (x *Tactics) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_tactics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tactics.ProtoReflect.Descriptor instead.
func (*Tactics) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_tactics_proto_rawDescGZIP(), []int{0}
}

func (x *Tactics) GetBaseParams() *BaseParams {
	if x != nil {
		return x.BaseParams
	}
	return nil
}

func (x *Tactics) GetDialParams() *DialParams {
	if x != nil {
		return x.DialParams
	}
	return nil
}

func (x *Tactics) GetIsTacticsRequest() bool {
	if x != nil && x.IsTacticsRequest != nil {
		return *x.IsTacticsRequest
	}
	return false
}

func (x *Tactics) GetNewTacticsTag() string {
	if x != nil && x.NewTacticsTag != nil {
		return *x.NewTacticsTag
	}
	return ""
}

func (x *Tactics) GetStoredTacticsTag() string {
	if x != nil && x.StoredTacticsTag != nil {
		return *x.StoredTacticsTag
	}
	return ""
}

type TacticsSpeedTest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseParams      *BaseParams            `protobuf:"bytes,1,opt,name=base_params,json=baseParams,proto3,oneof" json:"base_params,omitempty"`
	RoundTripTimeMs *int64                 `protobuf:"varint,100,opt,name=round_trip_time_ms,json=roundTripTimeMs,proto3,oneof" json:"round_trip_time_ms,omitempty"`
	BytesDown       *int64                 `protobuf:"varint,101,opt,name=bytes_down,json=bytesDown,proto3,oneof" json:"bytes_down,omitempty"`
	BytesUp         *int64                 `protobuf:"varint,102,opt,name=bytes_up,json=bytesUp,proto3,oneof" json:"bytes_up,omitempty"`
	RelayProtocol   *string                `protobuf:"bytes,103,opt,name=relay_protocol,json=relayProtocol,proto3,oneof" json:"relay_protocol,omitempty"`
	ServerRegion    *string                `protobuf:"bytes,104,opt,name=server_region,json=serverRegion,proto3,oneof" json:"server_region,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TacticsSpeedTest) Reset() {
	*x = TacticsSpeedTest{}
	mi := &file_ca_psiphon_psiphond_tactics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TacticsSpeedTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TacticsSpeedTest) ProtoMessage() {}

func (x *TacticsSpeedTest) ProtoReflect() protoreflect.Message {
	mi := &file_ca_psiphon_psiphond_tactics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TacticsSpeedTest.ProtoReflect.Descriptor instead.
func (*TacticsSpeedTest) Descriptor() ([]byte, []int) {
	return file_ca_psiphon_psiphond_tactics_proto_rawDescGZIP(), []int{1}
}

func (x *TacticsSpeedTest) GetBaseParams() *BaseParams {
	if x != nil {
		return x.BaseParams
	}
	return nil
}

func (x *TacticsSpeedTest) GetRoundTripTimeMs() int64 {
	if x != nil && x.RoundTripTimeMs != nil {
		return *x.RoundTripTimeMs
	}
	return 0
}

func (x *TacticsSpeedTest) GetBytesDown() int64 {
	if x != nil && x.BytesDown != nil {
		return *x.BytesDown
	}
	return 0
}

func (x *TacticsSpeedTest) GetBytesUp() int64 {
	if x != nil && x.BytesUp != nil {
		return *x.BytesUp
	}
	return 0
}

func (x *TacticsSpeedTest) GetRelayProtocol() string {
	if x != nil && x.RelayProtocol != nil {
		return *x.RelayProtocol
	}
	return ""
}

func (x *TacticsSpeedTest) GetServerRegion() string {
	if x != nil && x.ServerRegion != nil {
		return *x.ServerRegion
	}
	return ""
}

var File_ca_psiphon_psiphond_tactics_proto protoreflect.FileDescriptor

const file_ca_psiphon_psiphond_tactics_proto_rawDesc = "" +
	"\n" +
	"!ca.psiphon.psiphond/tactics.proto\x12\x13ca.psiphon.psiphond\x1a%ca.psiphon.psiphond/base_params.proto\x1a%ca.psiphon.psiphond/dial_params.proto\"\x8c\x03\n" +
	"\aTactics\x12E\n" +
	"\vbase_params\x18\x01 \x01(\v2\x1f.ca.psiphon.psiphond.BaseParamsH\x00R\n" +
	"baseParams\x88\x01\x01\x12E\n" +
	"\vdial_params\x18\x02 \x01(\v2\x1f.ca.psiphon.psiphond.DialParamsH\x01R\n" +
	"dialParams\x88\x01\x01\x121\n" +
	"\x12is_tactics_request\x18d \x01(\bH\x02R\x10isTacticsRequest\x88\x01\x01\x12+\n" +
	"\x0fnew_tactics_tag\x18e \x01(\tH\x03R\rnewTacticsTag\x88\x01\x01\x121\n" +
	"\x12stored_tactics_tag\x18f \x01(\tH\x04R\x10storedTacticsTag\x88\x01\x01B\x0e\n" +
	"\f_base_paramsB\x0e\n" +
	"\f_dial_paramsB\x15\n" +
	"\x13_is_tactics_requestB\x12\n" +
	"\x10_new_tactics_tagB\x15\n" +
	"\x13_stored_tactics_tag\"\x8d\x03\n" +
	"\x10TacticsSpeedTest\x12E\n" +
	"\vbase_params\x18\x01 \x01(\v2\x1f.ca.psiphon.psiphond.BaseParamsH\x00R\n" +
	"baseParams\x88\x01\x01\x120\n" +
	"\x12round_trip_time_ms\x18d \x01(\x03H\x01R\x0froundTripTimeMs\x88\x01\x01\x12\"\n" +
	"\n" +
	"bytes_down\x18e \x01(\x03H\x02R\tbytesDown\x88\x01\x01\x12\x1e\n" +
	"\bbytes_up\x18f \x01(\x03H\x03R\abytesUp\x88\x01\x01\x12*\n" +
	"\x0erelay_protocol\x18g \x01(\tH\x04R\rrelayProtocol\x88\x01\x01\x12(\n" +
	"\rserver_region\x18h \x01(\tH\x05R\fserverRegion\x88\x01\x01B\x0e\n" +
	"\f_base_paramsB\x15\n" +
	"\x13_round_trip_time_msB\r\n" +
	"\v_bytes_downB\v\n" +
	"\t_bytes_upB\x11\n" +
	"\x0f_relay_protocolB\x10\n" +
	"\x0e_server_regionBHZFgithub.com/Psiphon-Labs/psiphon-tunnel-core/psiphon/server/pb/psiphondb\x06proto3"

var (
	file_ca_psiphon_psiphond_tactics_proto_rawDescOnce sync.Once
	file_ca_psiphon_psiphond_tactics_proto_rawDescData []byte
)

func file_ca_psiphon_psiphond_tactics_proto_rawDescGZIP() []byte {
	file_ca_psiphon_psiphond_tactics_proto_rawDescOnce.Do(func() {
		file_ca_psiphon_psiphond_tactics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ca_psiphon_psiphond_tactics_proto_rawDesc), len(file_ca_psiphon_psiphond_tactics_proto_rawDesc)))
	})
	return file_ca_psiphon_psiphond_tactics_proto_rawDescData
}

var file_ca_psiphon_psiphond_tactics_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ca_psiphon_psiphond_tactics_proto_goTypes = []any{
	(*Tactics)(nil),          // 0: ca.psiphon.psiphond.Tactics
	(*TacticsSpeedTest)(nil), // 1: ca.psiphon.psiphond.TacticsSpeedTest
	(*BaseParams)(nil),       // 2: ca.psiphon.psiphond.BaseParams
	(*DialParams)(nil),       // 3: ca.psiphon.psiphond.DialParams
}
var file_ca_psiphon_psiphond_tactics_proto_depIdxs = []int32{
	2, // 0: ca.psiphon.psiphond.Tactics.base_params:type_name -> ca.psiphon.psiphond.BaseParams
	3, // 1: ca.psiphon.psiphond.Tactics.dial_params:type_name -> ca.psiphon.psiphond.DialParams
	2, // 2: ca.psiphon.psiphond.TacticsSpeedTest.base_params:type_name -> ca.psiphon.psiphond.BaseParams
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ca_psiphon_psiphond_tactics_proto_init() }
func file_ca_psiphon_psiphond_tactics_proto_init() {
	if File_ca_psiphon_psiphond_tactics_proto != nil {
		return
	}
	file_ca_psiphon_psiphond_base_params_proto_init()
	file_ca_psiphon_psiphond_dial_params_proto_init()
	file_ca_psiphon_psiphond_tactics_proto_msgTypes[0].OneofWrappers = []any{}
	file_ca_psiphon_psiphond_tactics_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ca_psiphon_psiphond_tactics_proto_rawDesc), len(file_ca_psiphon_psiphond_tactics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ca_psiphon_psiphond_tactics_proto_goTypes,
		DependencyIndexes: file_ca_psiphon_psiphond_tactics_proto_depIdxs,
		MessageInfos:      file_ca_psiphon_psiphond_tactics_proto_msgTypes,
	}.Build()
	File_ca_psiphon_psiphond_tactics_proto = out.File
	file_ca_psiphon_psiphond_tactics_proto_goTypes = nil
	file_ca_psiphon_psiphond_tactics_proto_depIdxs = nil
}
